groonga manual(v0.1.4)
                              table_create (組込コマンド)

■名前

 table_create - テーブルの追加

■書式

 table_create name [flags [key_type [value_type [default_tokenizer [output_type]]]]]

■説明

 groonga組込コマンドの一つであるtable_createについて説明します。組込コマンドは、
 groonga実行ファイルの引数、標準入力、またはソケット経由でgroongaサーバにリクエストを送
 信することによって実行します。

 table_createコマンドは、使用しているデータベースに対してテーブルを追加します。groonga
 には名前付きテーブルと名前なしテーブル、永続テーブルと一時テーブルがありますが、
 table_createコマンドでは、名前付きの永続テーブルのみが作成できます。テーブルはレコード
 の集合であり、全てのレコードは一意なIDを持ちます。IDはレコードを追加した順序に従って自
 動的に付与されます。
 テーブルにカラムを追加する時にはcolumn_createコマンドを使用します。また、テーブルを作
 成した時点でいくつかの疑似カラムが使用可能になっています。

■引数

 name
   作成するテーブルの名前を指定します。nameはデータベース内で一意な、未定義の名前でなけ
   ればなりません。組込型名・組込コマンド名・組込関数名は予約済みであり、テーブル名には
   使用できません。また、ピリオド('.'), コロン(':')を含む名前のテーブルは作成できません。

 flags
   作成するテーブルの属性を示す数値を指定します。(デフォルト値は0)

    0
      主キー値をハッシュ表で管理するテーブルを作成します。ハッシュ表を使用したテーブル
      では、主キー値に完全一致するレコードを高速に検索することができます。

    1
      主キー値をパトリシア木で管理するテーブルを作成します。パトリシア木を使用したテー
      ブルでは、主キー値に完全一致するレコード、前方一致するレコード、および最長共通接
      頭辞となるレコードを高速に検索することができます。また、キー値の昇降順でレコード
      を取り出したり、キー値の範囲での検索を行うことができます。また、flagsの値に64を加
      えることによって、後方一致検索も可能となります。

    3
      主キーを持たないテーブルを作成します。各レコードはIDのみによって特定することがで
      きます。

    4
      複数のテーブルをまとめて操作するための仮想的なテーブル(view)を作成します。

   主キーを持つテーブルについては、flagsの値に128を加えることによって、主キー値を正規化
   した上で登録することを指定できます。この値が指定されたテーブルではたとえば、主キー値
   'abc'と'ABC' は同一のレコードに対応するものとみなされます。

 key_type
   主キー値の型を指定します。主キー値を持つテーブルに限り有効です。型にはgroongaの組込
   型か、同一データベースに定義済みのユーザ定義型、定義済みのテーブルを指定することがで
   きます。

 value_type
   値の型を指定します。tableの値には固定長の型のみが指定できます。(可変長の値が必要な場
   合は別途カラムを作成します) 型にはgroongaの組込型か、同一データベースに定義済みのユー
   ザ定義型、またはテーブルを指定することができます。(デフォルトはvalueなし)

 default_tokenizer
   作成するテーブルを語彙表として使用する場合、文字列を分割するトークナイザを指定します。
   組込のトークナイザとして、以下が準備されています。

   TokenDelimit
     空白で区切られた文字列をトークンとする

   TokenUnigram
     unigram(1文字を1トークンとする)

   TokenBigram
     bigram(2文字の文字列要素をトークンとする)

   TokenTrigram
     trigram(3文字の文字列要素をトークンとする)

   TokenMecab
     形態素解析器mecabで解析した形態素をトークンとする。(mecabを組み込んだ場合のみ有効)

   トークナイザが指定されなかった場合は、対象の文字列を分割せずに語彙表に登録します。

 output_type
   出力形式を、json,tsv,xmlのいずれかで指定します。(*1)

■返値

 リターンコード(*2)
   grn_rcに対応する数値が返されます。0(GRN_SUCCESS)以外の場合は、続いてエラー内容を示す
   文字列が返されます。

■例

 ShortText型の主キーを持つハッシュ表型のテーブル、Entryを作成します。

   table_create Entry --key_type ShortText --output_type json
   [[0]]

 ShortText型の主キーを持つパトリシア木型のテーブル、Termを作成します。主キー値は正規化
 して管理します。また、このテーブルを語彙表とする転置索引を作成する場合には、バイグラム
 の索引を作成します。

   table_create Term --flags 129 --key_type ShortText TokenBigram
   [[0]]

■注意

 *1: tsv,xml出力はv1.0でサポートされます。
 *2: リターンコード出力はv1.0でサポートされます。
