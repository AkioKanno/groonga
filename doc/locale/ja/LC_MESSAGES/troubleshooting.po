# Japanese translations for 1.2.1 package.
# Copyright (C) 2009-2011, Brazil, Inc
# This file is distributed under the same license as the groonga package.
# Kouhei Sutou <kou@clear-code.com>, 2011.
#
msgid ""
msgstr ""
"Project-Id-Version: 1.2.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2011-05-24 18:26\n"
"PO-Revision-Date: 2011-05-09 00:37+0900\n"
"Last-Translator: Kouhei Sutou <kou@clear-code.com>\n"
"Language-Team: Japanese\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../../source/troubleshooting.txt:6
msgid "トラブルシューティング"
msgstr ""

#: ../../../source/troubleshooting/different_results_with_the_same_keyword.txt:6
msgid "同じ検索キーワードなのに全文検索結果が異なる"
msgstr ""

#: ../../../source/troubleshooting/different_results_with_the_same_keyword.txt:8
msgid ""
"同じ検索キーワードでも一緒に指定するクエリによっては全文検索の結果が異なるこ"
"とがあります。ここでは、その原因と対策方法を説明します。"
msgstr ""

#: ../../../source/troubleshooting/different_results_with_the_same_keyword.txt:11
msgid "例"
msgstr ""

#: ../../../source/troubleshooting/different_results_with_the_same_keyword.txt:13
msgid "まず、実際に検索結果が異なる例を説明します。"
msgstr ""

#: ../../../source/troubleshooting/different_results_with_the_same_keyword.txt:15
msgid ""
"DDLは以下の通りです。BlogsテーブルのbodyカラムをTokenMecabトークナイザーを"
"使ってトークナイズしてからインデックスを作成しています。::"
msgstr ""

#: ../../../source/troubleshooting/different_results_with_the_same_keyword.txt:17
msgid ""
"table_create Blogs TABLE_NO_KEY column_create Blogs body COLUMN_SCALAR "
"ShortText column_create Blogs updated_at COLUMN_SCALAR Time table_create "
"Terms TABLE_PAT_KEY|KEY_NORMALIZE ShortText --default_tokenizer TokenMecab "
"column_create Terms blog_body COLUMN_INDEX|WITH_POSITION Blogs body"
msgstr ""

#: ../../../source/troubleshooting/different_results_with_the_same_keyword.txt:23
msgid "テスト用のデータは1件だけ投入します。::"
msgstr ""

#: ../../../source/troubleshooting/different_results_with_the_same_keyword.txt:25
msgid ""
"load --table Blogs [   [\"body\", \"updated_at\"],   [\"東京都民に深刻なダ"
"メージを与えました。\", \"2010/9/21 10:18:34\"], ]"
msgstr ""

#: ../../../source/troubleshooting/different_results_with_the_same_keyword.txt:31
msgid "まず、全文検索のみで検索します。この場合ヒットします。::"
msgstr ""

#: ../../../source/troubleshooting/different_results_with_the_same_keyword.txt:33
msgid ""
"> select Blogs --filter 'body @ \"東京都\"' [[0,4102.268052438,0.000743783],"
"[[[1],[[\"_id\",\"UInt32\"],[\"updated_at\",\"Time\"],[\"body\",\"ShortText"
"\"]],[1,1285031914.0,\"東京都民に深刻なダメージを与えました。\"]]]]"
msgstr ""

#: ../../../source/troubleshooting/different_results_with_the_same_keyword.txt:36
msgid ""
"続いて、範囲指定と全文検索を組み合わせて検索します（1285858800は2010/10/1 "
"0:0:0の秒表記）。この場合もヒットします。::"
msgstr ""

#: ../../../source/troubleshooting/different_results_with_the_same_keyword.txt:38
msgid ""
"> select Blogs --filter 'body @ \"東京都\" && updated_at < "
"1285858800' [[0,4387.524084839,0.001525487],[[[1],[[\"_id\",\"UInt32\"],"
"[\"updated_at\",\"Time\"],[\"body\",\"ShortText\"]],[1,1285031914.0,\"東京都"
"民に深刻なダメージを与えました。\"]]]]"
msgstr ""

#: ../../../source/troubleshooting/different_results_with_the_same_keyword.txt:41
msgid ""
"最後に、範囲指定と全文検索の順番を入れ替えて検索します。個々の条件は同じです"
"が、この場合はヒットしません。::"
msgstr ""

#: ../../../source/troubleshooting/different_results_with_the_same_keyword.txt:43
msgid ""
"> select Blogs --filter 'updated_at < 1285858800 && body @ \"東京都"
"\"' [[0,4400.292570838,0.000647716],[[[0],[[\"_id\",\"UInt32\"],[\"updated_at"
"\",\"Time\"],[\"body\",\"ShortText\"]]]]]"
msgstr ""

#: ../../../source/troubleshooting/different_results_with_the_same_keyword.txt:46
msgid "どうしてこのような挙動になるかを説明します。"
msgstr ""

#: ../../../source/troubleshooting/different_results_with_the_same_keyword.txt:49
msgid "原因"
msgstr ""

#: ../../../source/troubleshooting/different_results_with_the_same_keyword.txt:51
msgid ""
"このような挙動になるのは全文検索時に複数の検索の挙動を使い分けているからで"
"す。ここでは簡単に説明するので、詳細は :doc:`/spec/search` を参照してくださ"
"い。"
msgstr ""

#: ../../../source/troubleshooting/different_results_with_the_same_keyword.txt:53
msgid "検索の挙動には以下の3種類があります。"
msgstr ""

#: ../../../source/troubleshooting/different_results_with_the_same_keyword.txt:55
msgid "完全一致検索"
msgstr ""

#: ../../../source/troubleshooting/different_results_with_the_same_keyword.txt:56
msgid "非わかち書き検索"
msgstr ""

#: ../../../source/troubleshooting/different_results_with_the_same_keyword.txt:57
msgid "部分一致検索"
msgstr ""

#: ../../../source/troubleshooting/different_results_with_the_same_keyword.txt:59
msgid ""
"groongaは基本的に完全一致検索のみを行います。上記の例では「東京都民に深刻なダ"
"メージを与えました。」を「東京都」というクエリで検索していますが、TokenMecab"
"トークナイザーを使っている場合はこのクエリはマッチしません。"
msgstr ""

#: ../../../source/troubleshooting/different_results_with_the_same_keyword.txt:61
msgid "検索対象の「東京都民に深刻なダメージを与えました。」は"
msgstr ""

#: ../../../source/troubleshooting/different_results_with_the_same_keyword.txt:63
msgid "東京 / 都民 / に / 深刻 / な / ダメージ / を / 与え / まし / た / 。"
msgstr ""

#: ../../../source/troubleshooting/different_results_with_the_same_keyword.txt:65
msgid "とトークナイズされますが、クエリの「東京都」は"
msgstr ""

#: ../../../source/troubleshooting/different_results_with_the_same_keyword.txt:67
msgid "東京 / 都"
msgstr ""

#: ../../../source/troubleshooting/different_results_with_the_same_keyword.txt:69
msgid "とトークナイズされるため、完全一致しません。"
msgstr ""

#: ../../../source/troubleshooting/different_results_with_the_same_keyword.txt:71
msgid ""
"groongaは完全一致検索した結果のヒット件数が所定の閾値を超えない場合に限り、非"
"わかち書き検索を行い、それでもヒット件数が閾値を超えない場合は部分一致検索を"
"行います（閾値は1がデフォルト値となっています）。このケースのデータは部分一致"
"検索ではヒットするので、「東京都」クエリのみを指定するとヒットします。"
msgstr ""

#: ../../../source/troubleshooting/different_results_with_the_same_keyword.txt:73
msgid ""
"しかし、以下のように全文検索前にすでに閾値が越えている場合（「updated_at < "
"1285858800」で1件ヒットし、閾値を越える）は、たとえ完全一致検索で1件もヒット"
"しない場合でも部分一致検索などを行いません。::"
msgstr ""

#: ../../../source/troubleshooting/different_results_with_the_same_keyword.txt:75
msgid "select Blogs --filter 'updated_at < 1285858800 && body @ \"東京都\"'"
msgstr ""

#: ../../../source/troubleshooting/different_results_with_the_same_keyword.txt:77
msgid ""
"そのため、条件の順序を変えると検索結果が変わるという状況が発生します。以下"
"で、この情報を回避する方法を2種類紹介しますが、それぞれトレードオフとなる条件"
"があるので採用するかどうかを十分検討してください。"
msgstr ""

#: ../../../source/troubleshooting/different_results_with_the_same_keyword.txt:80
msgid "対策方法1: トークナイザーを変更する"
msgstr ""

#: ../../../source/troubleshooting/different_results_with_the_same_keyword.txt:82
msgid ""
"TokenMecabトークナイザーは事前に準備した辞書を用いてトークナイズするため、再"
"現率よりも適合率を重視したトークナイザーと言えます。一方、TokenBigramなど、N-"
"gram系のトークナイザーは適合率を重視したトークナイザーと言えます。例えば、"
"TokenMecabの場合「東京都」で「京都」に完全一致することはありませんが、"
"TokenBigramでは完全一致します。一方、TokenMecabでは「東京都民」に完全一致しま"
"せんが、TokenBigramでは完全一致します。"
msgstr ""

#: ../../../source/troubleshooting/different_results_with_the_same_keyword.txt:84
msgid ""
"このようにN-gram系のトークナイザーを指定することにより再現率をあげることがで"
"きますが、適合率が下がり検索ノイズが含まれる可能性が高くなります。この度合い"
"を調整するためには :doc:`/commands/select` のmatch_columnsで使用する索引毎に"
"重み付けを指定します。"
msgstr ""

#: ../../../source/troubleshooting/different_results_with_the_same_keyword.txt:86
msgid ""
"ここでも、前述の例を使って具体例を示します。まず、TokenBigramを用いた索引を追"
"加します。::"
msgstr ""

#: ../../../source/troubleshooting/different_results_with_the_same_keyword.txt:88
msgid ""
"table_create Bigram TABLE_PAT_KEY|KEY_NORMALIZE ShortText --"
"default_tokenizer TokenBigram column_create Bigram blog_body COLUMN_INDEX|"
"WITH_POSITION Blogs body"
msgstr ""

#: ../../../source/troubleshooting/different_results_with_the_same_keyword.txt:91
msgid ""
"この状態でも以前はマッチしなかったレコードがヒットするようになります。::"
msgstr ""

#: ../../../source/troubleshooting/different_results_with_the_same_keyword.txt:93
msgid ""
"> select Blogs --filter 'updated_at < 1285858800 && body @ \"東京都"
"\"' [[0,7163.448064902,0.000418127],[[[1],[[\"_id\",\"UInt32\"],[\"updated_at"
"\",\"Time\"],[\"body\",\"ShortText\"]],[1,1285031914.0,\"東京都民に深刻なダ"
"メージを与えました。\"]]]]"
msgstr ""

#: ../../../source/troubleshooting/different_results_with_the_same_keyword.txt:96
msgid ""
"しかし、N-gram系のトークナイザーの方がTokenMecabトークナイザーよりも語のヒッ"
"ト数が多いため、N-gram系のヒットスコアの方が重く扱われてしまいます。N-gram系"
"のトークナイザーの方がTokenMecabトークナイザーよりも適合率の低い場合が多いの"
"で、このままでは検索ノイズが上位に表示される可能性が高くなります。"
msgstr ""

#: ../../../source/troubleshooting/different_results_with_the_same_keyword.txt:98
msgid ""
"そこで、TokenMecabトークナイザーを使って作った索引の方をTokenBigramトークナイ"
"ザーを使って作った索引よりも重視するように重み付けを指定します。これは、"
"match_columnsオプションで指定できます。::"
msgstr ""

#: ../../../source/troubleshooting/different_results_with_the_same_keyword.txt:100
msgid ""
"> select Blogs --match_columns 'Terms.blog_body * 10 || Bigram.blog_body * "
"3' --query '東京都' --output_columns '_score, "
"body' [[0,8167.364602632,0.000647003],[[[1],[[\"_score\",\"Int32\"],[\"body"
"\",\"ShortText\"]],[13,\"東京都民に深刻なダメージを与えました。\"]]]]"
msgstr ""

#: ../../../source/troubleshooting/different_results_with_the_same_keyword.txt:103
msgid ""
"この場合はスコアが11になっています。内訳は、Terms.blog_body索引（TokenMecab"
"トークナイザーを使用）でマッチしたので10、Bigram.blog_body索引（TokenBigram"
"トークナイザーを使用）でマッチしたので3、これらを合計して13になっています。こ"
"のようにTokenMecabトークナイザーの重みを高くすることにより、検索ノイズが上位"
"にくることを抑えつつ再現率を上げることができます。"
msgstr ""

#: ../../../source/troubleshooting/different_results_with_the_same_keyword.txt:105
msgid ""
"この例は日本語だったのでTokenBigramトークナイザーでよかったのですが、アルファ"
"ベットの場合はTokenBigramSplitSymbolAlphaトークナイザーなども利用する必要があ"
"ります。例えば、「楽しいbilliard」はTokenBigramトークナイザーでは"
msgstr ""

#: ../../../source/troubleshooting/different_results_with_the_same_keyword.txt:107
msgid "楽し / しい / billiard"
msgstr ""

#: ../../../source/troubleshooting/different_results_with_the_same_keyword.txt:109
msgid ""
"となり、「bill」では完全一致しません。一方、TokenBigramSplitSymbolAlphaトーク"
"ナイザーを使うと"
msgstr ""

#: ../../../source/troubleshooting/different_results_with_the_same_keyword.txt:111
msgid "楽し / しい / いb / bi / il / ll / li / ia / ar / rd / d"
msgstr ""

#: ../../../source/troubleshooting/different_results_with_the_same_keyword.txt:113
msgid "となり、「bill」でも完全一致します。"
msgstr ""

#: ../../../source/troubleshooting/different_results_with_the_same_keyword.txt:115
msgid ""
"TokenBigramSplitSymbolAlphaトークナイザーを使う場合も重み付けを考慮する必要が"
"あることはかわりありません。"
msgstr ""

#: ../../../source/troubleshooting/different_results_with_the_same_keyword.txt:117
msgid "利用できるバイグラム系のトークナイザーの一覧は以下の通りです。"
msgstr ""

#: ../../../source/troubleshooting/different_results_with_the_same_keyword.txt:119
msgid ""
"TokenBigram: バイグラムでトークナイズする。連続する記号・アルファベット・数字"
"は一語として扱う。"
msgstr ""

#: ../../../source/troubleshooting/different_results_with_the_same_keyword.txt:120
msgid ""
"TokenBigramSplitSymbol: 記号もバイグラムでトークナイズする。連続するアルファ"
"ベット・数字は一語として扱う。"
msgstr ""

#: ../../../source/troubleshooting/different_results_with_the_same_keyword.txt:121
msgid ""
"TokenBigramSplitSymbolAlpha: 記号とアルファベットもバイグラムでトークナイズす"
"る。連続する数字は一語として扱う。"
msgstr ""

#: ../../../source/troubleshooting/different_results_with_the_same_keyword.txt:122
msgid ""
"TokenBigramSplitSymbolAlphaDigit: 記号・アルファベット・数字もバイグラムで"
"トークナイズする。"
msgstr ""

#: ../../../source/troubleshooting/different_results_with_the_same_keyword.txt:123
msgid ""
"TokenBigramIgnoreBlank: バイグラムでトークナイズする。連続する記号・アルファ"
"ベット・数字は一語として扱う。空白は無視する。"
msgstr ""

#: ../../../source/troubleshooting/different_results_with_the_same_keyword.txt:124
msgid ""
"TokenBigramIgnoreBlankSplitSymbol: 記号もバイグラムでトークナイズする。連続す"
"るアルファベット・数字は一語として扱う。空白は無視する。"
msgstr ""

#: ../../../source/troubleshooting/different_results_with_the_same_keyword.txt:125
msgid ""
"TokenBigramIgnoreBlankSplitSymbolAlpha: 記号とアルファベットもバイグラムで"
"トークナイズする。連続する数字は一語として扱う。空白は無視する。"
msgstr ""

#: ../../../source/troubleshooting/different_results_with_the_same_keyword.txt:126
msgid ""
"TokenBigramIgnoreBlankSplitSymbolAlphaDigit: 記号・アルファベット・数字もバイ"
"グラムでトークナイズする。空白は無視する。"
msgstr ""

#: ../../../source/troubleshooting/different_results_with_the_same_keyword.txt:129
msgid "対策方法2: 閾値をあげる"
msgstr ""

#: ../../../source/troubleshooting/different_results_with_the_same_keyword.txt:131
msgid ""
"非わかち書き検索・部分一致検索を利用するかどうかの閾値は--with-match-"
"escalation-threshold configureオプションで変更することができます。以下のよう"
"に指定すると、100件以下のヒット数であれば、たとえ完全一致検索でヒットしても、"
"非わかち書き検索・部分一致検索を行います。::"
msgstr ""

#: ../../../source/troubleshooting/different_results_with_the_same_keyword.txt:133
msgid "% ./configure --with-match-escalation-threashold=100"
msgstr ""

#: ../../../source/troubleshooting/different_results_with_the_same_keyword.txt:135
msgid ""
"この場合も対策方法1同様、検索ノイズが上位に現れる可能性が高くなることに注意し"
"てください。検索ノイズが多くなった場合は指定する値を低くする必要があります。"
msgstr ""
