# English translations for groonga package.
# Copyright (C) 2009-2012, Brazil, Inc
# This file is distributed under the same license as the groonga package.
# Kouhei Sutou <kou@clear-code.com>, 2012.
#
msgid ""
msgstr ""
"Project-Id-Version: groonga 2.0.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-04-23 10:52\n"
"PO-Revision-Date: 2012-07-23 17:56+0900\n"
"Last-Translator: Kouhei Sutou <kou@clear-code.com>\n"
"Language-Team: English\n"
"Language: en\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

# 63fab5f3d33041a4ba618b631bb8d0fd
#: ../../../source/characteristic.txt:6
msgid "Characteristics of Groonga"
msgstr "Characteristics of Groonga"

# 8120f98617654b0999d36c596d52f1cd
#: ../../../source/characteristic.txt:9
msgid "Groonga overview"
msgstr "Groonga overview"

# ae7af580d375488ea48a4359c796bd27
#: ../../../source/characteristic.txt:11
msgid ""
"Groonga is a fast and accurate full text search engine based on inverted "
"index. One of the characteristics of Groonga is that a newly registered "
"document instantly appears in search results. Also, Groonga allows updates "
"without read locks. These characteristics result in superior performance on "
"real-time applications."
msgstr ""
"Groonga is a fast and accurate full text search engine based on inverted "
"index. One of the characteristics of Groonga is that a newly registered "
"document instantly appears in search results. Also, Groonga allows updates "
"without read locks. These characteristics result in superior performance on "
"real-time applications."

# c0e6e594a48a4b059d2abd0184a0a2af
#: ../../../source/characteristic.txt:13
msgid ""
"Groonga is also a column-oriented database management system (DBMS). "
"Compared with well-known row-oriented systems, such as MySQL and PostgreSQL, "
"column-oriented systems are more suited for aggregate queries. Due to this "
"advantage, Groonga can cover weakness of row-oriented systems."
msgstr ""
"Groonga is also a column-oriented database management system (DBMS). "
"Compared with well-known row-oriented systems, such as MySQL and PostgreSQL, "
"column-oriented systems are more suited for aggregate queries. Due to this "
"advantage, Groonga can cover weakness of row-oriented systems."

# 85a1009d75324723860c6dd72c305690
#: ../../../source/characteristic.txt:15
msgid ""
"The basic functions of Groonga are provided in a C library. Also, libraries "
"for using Groonga in other languages, such as Ruby, are provided by related "
"projects. In addition, groonga-based storage engines are provided for MySQL "
"and PostgreSQL. These libraries and storage engines allow any application to "
"use Groonga. See `usage examples <http://groonga.org/users/>`_."
msgstr ""
"The basic functions of Groonga are provided in a C library. Also, libraries "
"for using Groonga in other languages, such as Ruby, are provided by related "
"projects. In addition, groonga-based storage engines are provided for MySQL "
"and PostgreSQL. These libraries and storage engines allow any application to "
"use Groonga. See `usage examples <http://groonga.org/users/>`_."

# eef0f14116cd439ba8222ea400f60738
#: ../../../source/characteristic.txt:18
msgid "Full text search and Instant update"
msgstr "Full text search and Instant update"

# 833bdd1c8c704ab68e99b538a9e9f9b4
#: ../../../source/characteristic.txt:20
msgid ""
"In widely used DBMSs, updates are immediately processed, for example, a "
"newly registered record appears in the result of the next query. In "
"contrast, some full text search engines do not support instant updates, "
"because it is difficult to dynamically update inverted indexes, the "
"underlying data structure."
msgstr ""
"In widely used DBMSs, updates are immediately processed, for example, a "
"newly registered record appears in the result of the next query. In "
"contrast, some full text search engines do not support instant updates, "
"because it is difficult to dynamically update inverted indexes, the "
"underlying data structure."

# 024a202c55314acd9d7c099f783845d1
#: ../../../source/characteristic.txt:22
msgid ""
"Groonga also uses inverted indexes but supports instant updates. In "
"addition, Groonga allows you to search documents even when updating the "
"document collection. Due to these superior characteristics, Groonga is very "
"flexible as a full text search engine. Also, Groonga always shows good "
"performance because it divides a large task, inverted index merging, into "
"smaller tasks."
msgstr ""
"Groonga also uses inverted indexes but supports instant updates. In "
"addition, Groonga allows you to search documents even when updating the "
"document collection. Due to these superior characteristics, Groonga is very "
"flexible as a full text search engine. Also, Groonga always shows good "
"performance because it divides a large task, inverted index merging, into "
"smaller tasks."

# 5d77a0d14c064792b1422483d15edfea
#: ../../../source/characteristic.txt:25
msgid "Column store and aggregate query"
msgstr "Column store and aggregate query"

# fa9e65a3f9eb4e8dbfc699a0b6c471cc
#: ../../../source/characteristic.txt:27
msgid ""
"People can collect more than enough data in the Internet era. However, it is "
"difficult to extract informative knowledge from a large database, and such a "
"task requires a many-sided analysis through trial and error. For example, "
"search refinement by date, time and location may reveal hidden patterns. "
"Aggregate queries are useful to perform this kind of tasks."
msgstr ""
"People can collect more than enough data in the Internet era. However, it is "
"difficult to extract informative knowledge from a large database, and such a "
"task requires a many-sided analysis through trial and error. For example, "
"search refinement by date, time and location may reveal hidden patterns. "
"Aggregate queries are useful to perform this kind of tasks."

# c19396a765b04ef8a04f708bdad52ec0
#: ../../../source/characteristic.txt:29
msgid ""
"An aggregate query groups search results by specified column values and then "
"counts the number of records in each group. For example, an aggregate query "
"in which a location column is specified counts the number of records per "
"location. Making a graph from the result of an aggregate query against a "
"date column is an easy way to visualize changes over time. Also, a "
"combination of refinement by location and an aggregate query against a date "
"column allows visualization of changes over time in specific location. Thus "
"refinement and aggregation are important to perform data mining."
msgstr ""
"An aggregate query groups search results by specified column values and then "
"counts the number of records in each group. For example, an aggregate query "
"in which a location column is specified counts the number of records per "
"location. Making a graph from the result of an aggregate query against a "
"date column is an easy way to visualize changes over time. Also, a "
"combination of refinement by location and an aggregate query against a date "
"column allows visualization of changes over time in specific location. Thus "
"refinement and aggregation are important to perform data mining."

# 66049cae53ce4920a63bc716f538dbc5
#: ../../../source/characteristic.txt:31
msgid ""
"A column-oriented architecture allows Groonga to efficiently process "
"aggregate queries because a column-oriented database, which stores records "
"by column, allows an aggregate query to access only a specified column. On "
"the other hand, an aggregate query on a row-oriented database, which stores "
"records by row, has to access neighbor columns, even though those columns "
"are not required."
msgstr ""
"A column-oriented architecture allows Groonga to efficiently process "
"aggregate queries because a column-oriented database, which stores records "
"by column, allows an aggregate query to access only a specified column. On "
"the other hand, an aggregate query on a row-oriented database, which stores "
"records by row, has to access neighbor columns, even though those columns "
"are not required."

# 39aa87ab85294b0585b9464fb73fc275
#: ../../../source/characteristic.txt:34
msgid "Inverted index and tokenizer"
msgstr "Inverted index and tokenizer"

# 45bde1a4562b4df6ac9cb9aa2f16af18
#: ../../../source/characteristic.txt:36
msgid ""
"An inverted index is a traditional data structure used for large-scale full "
"text search. A search engine based on inverted index extracts index terms "
"from a document when it is added. Then in retrieval, a query is divided into "
"index terms to find documents containing those index terms. In this way, "
"index terms play an important role in full text search and thus the way of "
"extracting index terms is a key to a better search engine."
msgstr ""
"An inverted index is a traditional data structure used for large-scale full "
"text search. A search engine based on inverted index extracts index terms "
"from a document when it is added. Then in retrieval, a query is divided into "
"index terms to find documents containing those index terms. In this way, "
"index terms play an important role in full text search and thus the way of "
"extracting index terms is a key to a better search engine."

# cda3f2d428ac4e15b6dd1014d338976f
#: ../../../source/characteristic.txt:38
msgid ""
"A tokenizer is a module to extract index terms. A Japanese full text search "
"engine commonly uses a word-based tokenizer (hereafter referred to as a word "
"tokenizer) and/or a character-based n-gram tokenizer (hereafter referred to "
"as an n-gram tokenizer). A word tokenizer-based search engine is superior in "
"time, space and precision, which is the fraction of relevant documents in a "
"search result. On the other hand, an n-gram tokenizer-based search engine is "
"superior in recall, which is the fraction of retrieved documents in the "
"perfect search result. The best choice depends on the application in "
"practice."
msgstr ""
"A tokenizer is a module to extract index terms. A Japanese full text search "
"engine commonly uses a word-based tokenizer (hereafter referred to as a word "
"tokenizer) and/or a character-based n-gram tokenizer (hereafter referred to "
"as an n-gram tokenizer). A word tokenizer-based search engine is superior in "
"time, space and precision, which is the fraction of relevant documents in a "
"search result. On the other hand, an n-gram tokenizer-based search engine is "
"superior in recall, which is the fraction of retrieved documents in the "
"perfect search result. The best choice depends on the application in "
"practice."

# 399d371c07764ee9b5dc76894babc4f5
#: ../../../source/characteristic.txt:40
msgid ""
"Groonga supports both word and n-gram tokenizers. The simplest built-in "
"tokenizer uses spaces as word delimiters. Built-in n-gram tokenizers (n = 1, "
"2, 3) are also available by default. In addition, a yet another built-in "
"word tokenizer is available if MeCab, a part-of-speech and morphological "
"analyzer, is embedded. Note that a tokenizer is pluggable and you can "
"develop your own tokenizer, such as a tokenizer based on another part-of-"
"speech tagger or a named-entity recognizer."
msgstr ""
"Groonga supports both word and n-gram tokenizers. The simplest built-in "
"tokenizer uses spaces as word delimiters. Built-in n-gram tokenizers (n = 1, "
"2, 3) are also available by default. In addition, a yet another built-in "
"word tokenizer is available if MeCab, a part-of-speech and morphological "
"analyzer, is embedded. Note that a tokenizer is pluggable and you can "
"develop your own tokenizer, such as a tokenizer based on another part-of-"
"speech tagger or a named-entity recognizer."

# 99f1dd56fbbe4199b728eee272b74a4d
#: ../../../source/characteristic.txt:43
msgid "Sharable storage and read lock-free"
msgstr "Sharable storage and read lock-free"

# fd22338109904cceb10654f17c3db3fd
#: ../../../source/characteristic.txt:45
msgid ""
"Multi-core processors are mainstream today and the number of cores per "
"processor is increasing. In order to exploit multiple cores, executing "
"multiple queries in parallel or dividing a query into sub-queries for "
"parallel processing is becoming more important."
msgstr ""
"Multi-core processors are mainstream today and the number of cores per "
"processor is increasing. In order to exploit multiple cores, executing "
"multiple queries in parallel or dividing a query into sub-queries for "
"parallel processing is becoming more important."

# 39108b4f40fd4b38ad4fbf5b7e53e525
#: ../../../source/characteristic.txt:47
msgid ""
"A database of Groonga can be shared with multiple threads/processes. Also, "
"multiple threads/processes can execute read queries in parallel even when "
"another thread/process is executing an update query because Groonga uses "
"read lock-free data structures. This feature is suited to a real-time "
"application that needs to update a database while executing read queries. In "
"addition, Groonga allows you to build flexible systems. For example, a "
"database can receive read queries through the built-in HTTP server of "
"Groonga while accepting update queries through MySQL."
msgstr ""
"A database of Groonga can be shared with multiple threads/processes. Also, "
"multiple threads/processes can execute read queries in parallel even when "
"another thread/process is executing an update query because Groonga uses "
"read lock-free data structures. This feature is suited to a real-time "
"application that needs to update a database while executing read queries. In "
"addition, Groonga allows you to build flexible systems. For example, a "
"database can receive read queries through the built-in HTTP server of "
"Groonga while accepting update queries through MySQL."

# 47daa45655f34eeb9b77f4863177915b
#: ../../../source/characteristic.txt:50
msgid "Geo-location (latitude and longitude) search"
msgstr "Geo-location (latitude and longitude) search"

# 11de0e50526d4ca686798e43b8e5f1b1
#: ../../../source/characteristic.txt:52
msgid ""
"Location services are getting more convenient because of mobile devices with "
"GPS. For example, if you are going to have lunch or dinner at a nearby "
"restaurant, a local search service for restaurants may be very useful, and "
"for such services, fast geo-location search is becoming more important."
msgstr ""
"Location services are getting more convenient because of mobile devices with "
"GPS. For example, if you are going to have lunch or dinner at a nearby "
"restaurant, a local search service for restaurants may be very useful, and "
"for such services, fast geo-location search is becoming more important."

# 237b97a668b14f30aaa4fe3e413f1a9d
#: ../../../source/characteristic.txt:54
msgid ""
"Groonga provides inverted index-based fast geo-location search, which "
"supports a query to find points in a rectangle or circle. Groonga gives high "
"priority to points near the center of an area. Also, Groonga supports "
"distance measurement and you can sort points by distance from any point."
msgstr ""
"Groonga provides inverted index-based fast geo-location search, which "
"supports a query to find points in a rectangle or circle. Groonga gives high "
"priority to points near the center of an area. Also, Groonga supports "
"distance measurement and you can sort points by distance from any point."

# ab5490312b5640848fd88a8d52f33300
#: ../../../source/characteristic.txt:57
msgid "Groonga library"
msgstr "Groonga library"

# 7493245bfdd2448bbb2168c29927de56
#: ../../../source/characteristic.txt:59
msgid ""
"The basic functions of Groonga are provided in a C library and any "
"application can use Groonga as a full text search engine or a column-"
"oriented database. Also, libraries for languages other than C/C++, such as "
"Ruby, are provided in related projects. See `related projects <http://"
"groonga.org/related-projects.html>`_ for details."
msgstr ""
"The basic functions of Groonga are provided in a C library and any "
"application can use Groonga as a full text search engine or a column-"
"oriented database. Also, libraries for languages other than C/C++, such as "
"Ruby, are provided in related projects. See `related projects <http://"
"groonga.org/related-projects.html>`_ for details."

# aa61d8e85dba495c8f6f2b7e305c0d06
#: ../../../source/characteristic.txt:62
msgid "Groonga server"
msgstr "Groonga server"

# 745c97df3e31432cba426eda820b3dec
#: ../../../source/characteristic.txt:64
msgid ""
"Groonga provides a built-in server command which supports HTTP, the "
"memcached binary protocol and the Groonga query transfer protocol (gqtp). "
"Also, a Groonga server supports query caching, which significantly reduces "
"response time for repeated read queries. Using this command, Groonga is "
"available even on a server that does not allow you to install new libraries."
msgstr ""
"Groonga provides a built-in server command which supports HTTP, the "
"memcached binary protocol and the Groonga query transfer protocol (gqtp). "
"Also, a Groonga server supports query caching, which significantly reduces "
"response time for repeated read queries. Using this command, Groonga is "
"available even on a server that does not allow you to install new libraries."

# bdeeaedd1de6476a9fff475fea4258f4
#: ../../../source/characteristic.txt:67
msgid "Groonga storage engine"
msgstr "Groonga storage engine"

# a74721095b4a42ed84335d3aab088dda
#: ../../../source/characteristic.txt:69
msgid ""
"Groonga works not only as an independent column-oriented DBMS but also as "
"storage engines of well-known DBMSs. For example, `mroonga <http://mroonga."
"org/>`_ is a MySQL pluggable storage engine using Groonga. By using mroonga, "
"you can use Groonga for column-oriented storage and full text search. A "
"combination of a built-in storage engine, MyISAM or InnoDB, and a groonga-"
"based full text search engine is also available. All the combinations have "
"good and bad points and the best one depends on the application. See "
"`related projects <http://groonga.org/related-projects.html>`_ for details."
msgstr ""
