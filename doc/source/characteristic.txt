.. -*- rst -*-

.. highlightlang:: none

The characteristics of groonga
==============================

The successor to Senna
----------------------

Groonga is developed as the successor to Senna which is a widely-used full text search library. Groonga inherits the outstanding characteristics of Senna and thus it is fast, accurate and flexible. In addition, we continue developing groonga to improve these characteristics.

Multi-protocol support
----------------------

Senna works as a component of an application that supports full text search. Groonga not only works as well as Senna but also works as a server that provides search service. The groonga server supports HTTP, memcached binary protocol and gqtp (groonga query transfer protocol). Clients can search by these protocols via TCP/IP connections. This feature makes it easy to use groonga on a rental server that doesn't allow users to install a library.

Fast update
-----------

Senna, the predecessor of groonga, is just a full text search library and is generally used with Tritonn or Ludia to provide various services. Tritonn is a custom MyISAM storage engine that uses Senna to support full text search. Ludia is an extension module for PostgreSQL to use Senna.

However, Tritonn and Ludia cannot fully utilize an important characteristic that Senna can update an index without read locks. For example, MyISAM uses a table lock while updating records in many cases. The table lock prevents clients from reading records even though Senna is read lock-free. This becomes a bottleneck of the whole system.

To cope with this problem, groonga has its own storage engine that doesn't require read locks. Groonga is thus suited for real-time applications.

Sharable storage
----------------

A storage file of groonga can be shared with multiple processes and threads. It doesn't require explicit locks.

`Mroonga <http://mroonga.github.com/>`_ is the successor to the Tritonn. It is implemented as a MySQL pluggable storage engine. Groonga storage files that are opened by mroonga can also be shared with groonga servers. For example, you can update via MySQL and search via HTTP.

Fast processing of aggregate queries
------------------------------------

The storage engine of groonga is based on a column-oriented model, also known as a decomposition model, that stores data by column not by row. The column-oriented model enables faster processing of aggregate queries such as drilldown in online analytical processing (OLAP).

A drilldown is one of the heavy queries. It first groups search results by their associated value and then counts the number of records in each group. Groonga can efficiently process such a query because its storage engine is based on a column-oriented model.

Improved inverted index implementation
--------------------------------------

The inverted index implementation of groonga is an improved version of Senna's. It is faster and more versatile.

In addition, groonga utilizes the inverted index to efficiently process complex queries, such as tag search and drilldown, which are difficult to process with traditional SQL and RDBs.

Geolocation (latitude and longitude) search
-------------------------------------------

Groonga supports geolocation search. Supported geodetic systems are the Japanese geodetic system and the world geodetic system (WGS 84). Supported geolocation refinement region types are circle and rectangle. Groonga also supports distance calculation between two coordinates.

Auto query cache mechanism
--------------------------

Groonga caches reference queries automatically.
