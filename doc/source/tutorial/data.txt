.. -*- rst -*-

.. highlightlang:: none

.. groonga-include : introduction.txt

.. groonga-command
.. database: tutorial

いろいろなデータの保存
======================

groongaは全文検索エンジンですが、文字列だけでなく、日時や経緯度など、いろいろなデータを保存することができます。

データ型
--------

groongaでは、数値（整数・浮動小数点数）と文字列に加えて、日時や経緯度を格納することができます。

例として、整数を格納するカラムnumber、浮動小数点数を格納するカラムfloat、文字列を格納するカラムstring、日時を格納するカラムtimeにより構成されるテーブルTypeを作成する手順を以下に示します。以下の例では、テーブルを作成した後でデータを格納し、さらに内容の確認をおこなっています。

.. groonga-command
.. include:: ../example/tutorial/data-1.log
.. table_create --name Type --flags TABLE_HASH_KEY --key_type ShortText
.. column_create --table Type --name number --type Int32
.. column_create --table Type --name float --type Float
.. column_create --table Type --name string --type ShortText
.. column_create --table Type --name time --type Time
.. load --table Type
.. [{"_key":"sample","number":12345,"float":42.195,"string":"GROONGA","time":1234567890.12}]
.. select --table Type

テーブルの作成手順は、 :doc:`/commands/table_create` コマンドを使って空のテーブルを作成した後、 :doc:`/commands/column_create` コマンドによりカラムを一つずつ作成するだけです。型の指定には--typeオプションを使います。整数の型としてInt32、浮動小数点数の型としてFloat、文字列の型としてShortText、日時の型としてTimeを使っていますが、整数と文字列については他にも型が存在します。利用可能なデータ型の一覧については、 :doc:`/type` を参照してください。経緯度については、後のチュートリアルで詳しく紹介します。

:doc:`/commands/load` コマンドで新しいレコードを作成するとき、省略したカラムには、データ型のデフォルト値が格納されます。デフォルト値については、 :doc:`/type` を参照してください。

テーブル参照
------------

groongaでは、別テーブルを参照するカラムを作成できます。より正確には、別テーブルのレコードIDを格納しておくことにより、別テーブルのレコードを参照できるようにします。以降、別テーブルを参照するカラムに格納される値のことをテーブル参照と呼びます。

テーブル参照のカラムがあるときは、--output_columnsオプションに「参照元カラム名.参照先カラム名」と指定することにより、参照先カラムの値を取り出すことができます。参照元カラム名のみを指定したときは、「参照元カラム名._key」と同様の扱いとなり、参照先レコードの主キー（_key）が取り出されます。また、テーブル参照が有効なレコードを指していないときは、参照先カラムのデフォルト値が取り出されるようになっています。

ここでは、先のチュートリアルで作成したSiteテーブルにlinkという新たなカラムを作成し、サイト間のリンク関係を保存できるようにしてみましょう。

.. groonga-command
.. include:: ../example/tutorial/data-2.log
.. column_create --table Site --name link --type Site
.. load --table Site
.. [{"_key":"http://example.org/","link":"http://example.net/"}]
.. select --table Site --output_columns _key,title,link._key,link.title --query title:@this

テーブル参照のカラムを作成するときは、--typeオプションに参照先テーブルの名前を指定します。この例では、同じテーブルに含まれる別のレコードを参照させたいので、Siteを指定することになります。次に、"http://example.org/"から"http://example.net/"へのリンクを作成しています。テーブル参照を作成するときは、IDではなく主キー（_key）を指定することに注意してください。最後に、リンクの内容を確認しています。"link._key"と"link.title"を--output_columnsに指定することにより、参照先の主キー（_key）とタイトル（title）を表示できています。

ベクターカラム
--------------

:doc:`/commands/column_create` コマンドでカラムを作成するとき、--flagsオプションにCOLUMN_VECTORフラグを指定すると、--typeに指定した型の配列を格納するカラムになります。以下、このようなカラムをベクターカラムと呼びます。ベクターカラムは、各レコードに複数の値を格納できるため、一対多の参照関係を表すのに便利です。

さきほどテーブル参照の例として作成したカラムでは、各サイトに一つのリンクしか保存できませんでした。通常は一つのサイトから多くのサイトにリンクが張られているので、これでは残念な仕様になってしまいます。そこで、ベクターカラムを使って、複数のリンクを保存できるようにしてみましょう。

.. FIXME: _idの配列ではダメなのかどうか。検証する。

.. groonga-command
.. include:: ../example/tutorial/data-3.log
.. column_create --table Site --name links --flags COLUMN_VECTOR --type Site
.. load --table Site
.. [{"_key":"http://example.org/","links":["http://example.net/","http://example.org/","http://example.com/"]}]
.. select --table Site --output_columns _key,title,links._key,links.title --query title:@this

新たなカラムにはSiteテーブルに対する参照の配列を格納するので、--typeオプションにSiteを指定するとともに、--flagsオプションにCOLUMN_VECTORフラグを指定しています。次に、 :doc:`/commands/load` による更新では、"http://example.org/"を主キー（_key）とするレコードに対し、3つのサイトをリンク先として格納しています。そして、最後にリンクの内容を確認しています。この例では、--output_columnsオプションに"links._key"と"links.title"を指定することにより、参照先の主キー（_key）とタイトル（title）をそれぞれ配列にしたものが表示されています。
