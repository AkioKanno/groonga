# English translations for Groonga package.
# Copyright (C) 2009-2014, Brazil, Inc
# This file is distributed under the same license as the Groonga package.
# Kouhei Sutou <kou@clear-code.com>, 2014.
#
msgid ""
msgstr ""
"Project-Id-Version: Groonga 4.0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-05-23 12:39+0900\n"
"PO-Revision-Date: 2014-05-23 12:44+0900\n"
"Last-Translator: Kouhei Sutou <kou@clear-code.com>\n"
"Language-Team: English\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: en\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

msgid "Suggest"
msgstr "Suggest"

msgid ""
"Groonga has the suggest feature. This section describes how to use it and "
"how it works."
msgstr ""
"Groonga has the suggest feature. This section describes how to use it and "
"how it works."

msgid "Completion"
msgstr "Completion"

msgid "This section describes about the following completion features:"
msgstr "This section describes about the following completion features:"

msgid "How it works"
msgstr "How it works"

msgid "How to use"
msgstr "How to use"

msgid "How to learn"
msgstr "How to learn"

msgid "The completion feature uses three searches to compute completed words:"
msgstr "The completion feature uses three searches to compute completed words:"

msgid "Prefix RK search against registered words."
msgstr "Prefix RK search against registered words."

msgid "Cooccurrence search against learned data."
msgstr "Cooccurrence search against learned data."

msgid "Prefix search against registered words. (optional)"
msgstr "Prefix search against registered words. (optional)"

msgid "Prefix RK search"
msgstr "Prefix RK search"

msgid ""
"RK means Romaji and Katakana. Prefix RK search can find registered words "
"that start with user's input by romaji, katakana or hiragana. It's useful "
"for searching in Japanese."
msgstr ""
"RK means Romaji and Katakana. Prefix RK search can find registered words "
"that start with user's input by romaji, katakana or hiragana. It's useful "
"for searching in Japanese."

msgid ""
"For example, there is a registered word \"日本\". And \"ニホン\" (it must be "
"katakana) is registered as its reading. An user can find \"日本\" by \"ni\", "
"\"二\" or \"に\"."
msgstr ""
"For example, there is a registered word \"日本\". And \"ニホン\" (it must be "
"katakana) is registered as its reading. An user can find \"日本\" by \"ni\", "
"\"二\" or \"に\"."

msgid ""
"If you create dataset which is named as example by :doc:`/reference/"
"executables/groonga-suggest-create-dataset` command, you can update pairs of "
"registered word and its reading by loading data to '_key' and 'kana' column "
"of item_example table explicitly for prefix RK search."
msgstr ""
"If you create dataset which is named as example by :doc:`/reference/"
"executables/groonga-suggest-create-dataset` command, you can update pairs of "
"registered word and its reading by loading data to '_key' and 'kana' column "
"of item_example table explicitly for prefix RK search."

msgid "Cooccurrence search"
msgstr "Cooccurrence search"

msgid ""
"Cooccurrence search can find registered words from user's partial input. It "
"uses user input sequences that will be learned from query logs, access logs "
"and so on."
msgstr ""
"Cooccurrence search can find registered words from user's partial input. It "
"uses user input sequences that will be learned from query logs, access logs "
"and so on."

msgid "For example, there is the following user input sequence:"
msgstr "For example, there is the following user input sequence:"

msgid "input"
msgstr "input"

msgid "submit"
msgstr "submit"

msgid "s"
msgstr "s"

msgid "no"
msgstr "no"

msgid "se"
msgstr "se"

msgid "sea"
msgstr "sea"

msgid "sear"
msgstr "sear"

msgid "searc"
msgstr "searc"

msgid "search"
msgstr "search"

msgid "yes"
msgstr "yes"

msgid "e"
msgstr "e"

msgid "en"
msgstr "en"

msgid "eng"
msgstr "eng"

msgid "engi"
msgstr "engi"

msgid "engin"
msgstr "engin"

msgid "engine"
msgstr "engine"

msgid "enginen"
msgstr "enginen"

msgid "no (typo!)"
msgstr "no (typo!)"

msgid "Groonga creates the following completion pairs:"
msgstr "Groonga creates the following completion pairs:"

msgid "completed word"
msgstr "completed word"

msgid ""
"All user not-submitted inputs (e.g. \"s\", \"se\" and so on) before each an "
"user submission maps to the submitted input (e.g. \"search\")."
msgstr ""
"All user not-submitted inputs (e.g. \"s\", \"se\" and so on) before each an "
"user submission maps to the submitted input (e.g. \"search\")."

msgid ""
"To be precise, this description isn't correct because it omits about time "
"stamp. Groonga doesn't case about \"all user not-submitted inputs before "
"each an user submission\". Groonga just case about \"all user not-submitted "
"inputs within a minute from an user submission before each an user submission"
"\". Groonga doesn't treat user inputs before a minute ago."
msgstr ""
"To be precise, this description isn't correct because it omits about time "
"stamp. Groonga doesn't case about \"all user not-submitted inputs before "
"each an user submission\". Groonga just case about \"all user not-submitted "
"inputs within a minute from an user submission before each an user submission"
"\". Groonga doesn't treat user inputs before a minute ago."

msgid ""
"If an user inputs \"sea\" and cooccurrence search returns \"search\" because "
"\"sea\" is in input column and corresponding completed word column value is "
"\"search\"."
msgstr ""
"If an user inputs \"sea\" and cooccurrence search returns \"search\" because "
"\"sea\" is in input column and corresponding completed word column value is "
"\"search\"."

msgid "Prefix search"
msgstr "Prefix search"

msgid ""
"Prefix search can find registered word that start with user's input. This "
"search doesn't care about romaji, katakana and hiragana not like Prefix RK "
"search."
msgstr ""
"Prefix search can find registered word that start with user's input. This "
"search doesn't care about romaji, katakana and hiragana not like Prefix RK "
"search."

msgid ""
"This search isn't always ran. It's just ran when it's requested explicitly "
"or both prefix RK search and cooccurrence search return nothing."
msgstr ""
"This search isn't always ran. It's just ran when it's requested explicitly "
"or both prefix RK search and cooccurrence search return nothing."

msgid ""
"For example, there is a registered word \"search\". An user can find \"search"
"\" by \"s\", \"se\", \"sea\", \"sear\", \"searc\" and \"search\"."
msgstr ""
"For example, there is a registered word \"search\". An user can find \"search"
"\" by \"s\", \"se\", \"sea\", \"sear\", \"searc\" and \"search\"."

msgid ""
"Groonga provides :doc:`/reference/commands/suggest` command to use "
"completion. `--type complete` option requests completion."
msgstr ""
"Groonga provides :doc:`/reference/commands/suggest` command to use "
"completion. `--type complete` option requests completion."

msgid "For example, here is an command to get completion results by \"en\":"
msgstr "For example, here is an command to get completion results by \"en\":"

msgid "Execution example::"
msgstr "Execution example::"

msgid "How it learns"
msgstr "How it learns"

msgid ""
"Cooccurrence search uses learned data. They are based on query logs, access "
"logs and so on. To create learned data, groonga needs user input sequence "
"with time stamp and user submit input with time stamp."
msgstr ""
"Cooccurrence search uses learned data. They are based on query logs, access "
"logs and so on. To create learned data, groonga needs user input sequence "
"with time stamp and user submit input with time stamp."

msgid ""
"For example, an user wants to search by \"engine\". The user inputs the "
"query with the following sequence:"
msgstr ""
"For example, an user wants to search by \"engine\". The user inputs the "
"query with the following sequence:"

msgid "2011-08-10T13:33:23+09:00: e"
msgstr "2011-08-10T13:33:23+09:00: e"

msgid "2011-08-10T13:33:23+09:00: en"
msgstr "2011-08-10T13:33:23+09:00: en"

msgid "2011-08-10T13:33:24+09:00: eng"
msgstr "2011-08-10T13:33:24+09:00: eng"

msgid "2011-08-10T13:33:24+09:00: engi"
msgstr "2011-08-10T13:33:24+09:00: engi"

msgid "2011-08-10T13:33:24+09:00: engin"
msgstr "2011-08-10T13:33:24+09:00: engin"

msgid "2011-08-10T13:33:25+09:00: engine (submit!)"
msgstr "2011-08-10T13:33:25+09:00: engine (submit!)"

msgid ""
"Groonga can be learned from the input sequence by the following command::"
msgstr ""
"Groonga can be learned from the input sequence by the following command::"

msgid "How to update RK reading data"
msgstr "How to update RK reading data"

msgid ""
"Groonga requires registered word and its reading for RK search, so load such "
"data in the advance."
msgstr ""
"Groonga requires registered word and its reading for RK search, so load such "
"data in the advance."

msgid ""
"Here is the example to register \"日本\" which means Japanese in english."
msgstr ""
"Here is the example to register \"日本\" which means Japanese in english."

msgid "Here is the example to update RK data to complete \"日本\"."
msgstr "Here is the example to update RK data to complete \"日本\"."

msgid "Then you can complete registered word \"日本\" by RK input - \"nihon\"."
msgstr ""
"Then you can complete registered word \"日本\" by RK input - \"nihon\"."

msgid ""
"Without loading above RK data, you can't complete registered word \"日本\" "
"by query - \"nihon\"."
msgstr ""
"Without loading above RK data, you can't complete registered word \"日本\" "
"by query - \"nihon\"."

msgid ""
"As the column type of item_query table is VECTOR_COLUMN, you can register "
"multiple readings for registered word."
msgstr ""
"As the column type of item_query table is VECTOR_COLUMN, you can register "
"multiple readings for registered word."

msgid ""
"This is the reason that you can also complete the registered word \"日本\" "
"by query - \"nippon\"."
msgstr ""
"This is the reason that you can also complete the registered word \"日本\" "
"by query - \"nippon\"."

msgid ""
"This feature is very convenient because you can search registered word even "
"though Japanese IM is disabled."
msgstr ""
"This feature is very convenient because you can search registered word even "
"though Japanese IM is disabled."

msgid ""
"If there are multiple candidates as completed result, you can customize "
"priority to set the value of \"boost\" column in item_query table."
msgstr ""
"If there are multiple candidates as completed result, you can customize "
"priority to set the value of \"boost\" column in item_query table."

msgid "Here is the example to customize priority for RK search."
msgstr "Here is the example to customize priority for RK search."

msgid "Correction"
msgstr "Correction"

msgid "This section describes about the following correction features:"
msgstr "This section describes about the following correction features:"

msgid "The correction feature uses three searches to compute corrected words:"
msgstr "The correction feature uses three searches to compute corrected words:"

msgid "Similar search against registered words. (optional)"
msgstr "Similar search against registered words. (optional)"

msgid ""
"Cooccurrence search can find registered words from user's wrong input. It "
"uses user submit sequences that will be learned from query logs, access logs "
"and so on."
msgstr ""
"Cooccurrence search can find registered words from user's wrong input. It "
"uses user submit sequences that will be learned from query logs, access logs "
"and so on."

msgid "For example, there are the following user submissions:"
msgstr "For example, there are the following user submissions:"

msgid "query"
msgstr "query"

msgid "time"
msgstr "time"

msgid "serach (typo!)"
msgstr "serach (typo!)"

msgid "2011-08-10T22:20:50+09:00"
msgstr "2011-08-10T22:20:50+09:00"

msgid "search (fixed!)"
msgstr "search (fixed!)"

msgid "2011-08-10T22:20:52+09:00"
msgstr "2011-08-10T22:20:52+09:00"

msgid ""
"Groonga creates the following correction pair from the above submissions:"
msgstr ""
"Groonga creates the following correction pair from the above submissions:"

msgid "corrected word"
msgstr "corrected word"

msgid "serach"
msgstr "serach"

msgid ""
"Groonga treats continuous submissions within a minute as input correction by "
"user. Not submitted user input sequence between two submissions isn't used "
"as learned data for correction."
msgstr ""
"Groonga treats continuous submissions within a minute as input correction by "
"user. Not submitted user input sequence between two submissions isn't used "
"as learned data for correction."

msgid ""
"If an user inputs \"serach\" and cooccurrence search returns \"search\" "
"because \"serach\" is in input column and corresponding corrected word "
"column value is \"search\"."
msgstr ""
"If an user inputs \"serach\" and cooccurrence search returns \"search\" "
"because \"serach\" is in input column and corresponding corrected word "
"column value is \"search\"."

msgid "Similar search"
msgstr "Similar search"

msgid ""
"Similar search can find registered words that has one or more the same "
"tokens as user input. TokenBigram tokenizer is used for tokenization because "
"suggest dataset schema created by :doc:`/reference/executables/groonga-"
"suggest-create-dataset` uses TokenBigram tokenizer as the default tokenizer."
msgstr ""
"Similar search can find registered words that has one or more the same "
"tokens as user input. TokenBigram tokenizer is used for tokenization because "
"suggest dataset schema created by :doc:`/reference/executables/groonga-"
"suggest-create-dataset` uses TokenBigram tokenizer as the default tokenizer."

msgid ""
"For example, there is a registered query \"search engine\". An user can find "
"\"search engine\" by \"web search service\", \"sound engine\" and so on. "
"Because \"search engine\" and \"web search engine\" have the same token "
"\"search\" and \"search engine\" and \"sound engine\" have the same token "
"\"engine\"."
msgstr ""
"For example, there is a registered query \"search engine\". An user can find "
"\"search engine\" by \"web search service\", \"sound engine\" and so on. "
"Because \"search engine\" and \"web search engine\" have the same token "
"\"search\" and \"search engine\" and \"sound engine\" have the same token "
"\"engine\"."

msgid ""
"\"search engine\" is tokenized to \"search\" and \"engine\" tokens. "
"(Groonga's TokenBigram tokenizer doesn't tokenize two characters for "
"continuous alphabets and continuous digits for reducing search noise. "
"TokenBigramSplitSymbolAlphaDigit tokenizer should be used to ensure "
"tokenizing to two characters.) \"web search service\" is tokenized to \"web"
"\", \"search\" and \"service\". \"sound engine\" is tokenized to \"sound\" "
"and \"engine\"."
msgstr ""
"\"search engine\" is tokenized to \"search\" and \"engine\" tokens. "
"(Groonga's TokenBigram tokenizer doesn't tokenize two characters for "
"continuous alphabets and continuous digits for reducing search noise. "
"TokenBigramSplitSymbolAlphaDigit tokenizer should be used to ensure "
"tokenizing to two characters.) \"web search service\" is tokenized to \"web"
"\", \"search\" and \"service\". \"sound engine\" is tokenized to \"sound\" "
"and \"engine\"."

msgid ""
"Groonga provides :doc:`/reference/commands/suggest` command to use "
"correction. `--type correct` option requests corrections."
msgstr ""
"Groonga provides :doc:`/reference/commands/suggest` command to use "
"correction. `--type correct` option requests corrections."

msgid ""
"For example, here is an command to get correction results by \"saerch\":"
msgstr ""
"For example, here is an command to get correction results by \"saerch\":"

msgid ""
"Cooccurrence search uses learned data. They are based on query logs, access "
"logs and so on. To create learned data, groonga needs user submit inputs "
"with time stamp."
msgstr ""
"Cooccurrence search uses learned data. They are based on query logs, access "
"logs and so on. To create learned data, groonga needs user submit inputs "
"with time stamp."

msgid ""
"For example, an user wants to search by \"search\" but the user has typo "
"\"saerch\" before inputs the correct query. The user inputs the query with "
"the following sequence:"
msgstr ""
"For example, an user wants to search by \"search\" but the user has typo "
"\"saerch\" before inputs the correct query. The user inputs the query with "
"the following sequence:"

msgid "2011-08-10T13:33:23+09:00: s"
msgstr "2011-08-10T13:33:23+09:00: s"

msgid "2011-08-10T13:33:23+09:00: sa"
msgstr "2011-08-10T13:33:23+09:00: sa"

msgid "2011-08-10T13:33:24+09:00: sae"
msgstr "2011-08-10T13:33:24+09:00: sae"

msgid "2011-08-10T13:33:24+09:00: saer"
msgstr "2011-08-10T13:33:24+09:00: saer"

msgid "2011-08-10T13:33:24+09:00: saerc"
msgstr "2011-08-10T13:33:24+09:00: saerc"

msgid "2011-08-10T13:33:25+09:00: saerch (submit!)"
msgstr "2011-08-10T13:33:25+09:00: saerch (submit!)"

msgid "2011-08-10T13:33:29+09:00: serch (correcting...)"
msgstr "2011-08-10T13:33:29+09:00: serch (correcting...)"

msgid "2011-08-10T13:33:30+09:00: search (submit!)"
msgstr "2011-08-10T13:33:30+09:00: search (submit!)"

msgid "Introduction"
msgstr "Introduction"

msgid "The suggest feature in Groonga provides the following features:"
msgstr "The suggest feature in Groonga provides the following features:"

msgid "Suggestion"
msgstr "Suggestion"

msgid ""
"Completion helps user input. If user inputs a partial word, Groonga can "
"return complete words from registered words."
msgstr ""
"Completion helps user input. If user inputs a partial word, Groonga can "
"return complete words from registered words."

msgid "For example, there are registered words:"
msgstr "For example, there are registered words:"

msgid "\"groonga\""
msgstr "\"groonga\""

msgid "\"complete\""
msgstr "\"complete\""

msgid "\"correction\""
msgstr "\"correction\""

msgid "\"suggest\""
msgstr "\"suggest\""

msgid ""
"An user inputs \"co\" and groonga returns \"complete\" and \"correction\" "
"because they starts with \"co\"."
msgstr ""
"An user inputs \"co\" and groonga returns \"complete\" and \"correction\" "
"because they starts with \"co\"."

msgid ""
"An user inputs \"sug\" and groonga returns \"suggest\" because \"suggest\" "
"starts with \"sug\"."
msgstr ""
"An user inputs \"sug\" and groonga returns \"suggest\" because \"suggest\" "
"starts with \"sug\"."

msgid ""
"An user inputs \"ab\" and groonga returns nothing because no word starts "
"with \"ab\"."
msgstr ""
"An user inputs \"ab\" and groonga returns nothing because no word starts "
"with \"ab\"."

msgid ""
"Correction also helps user input. If user inputs a wrong word, groonga can "
"return correct words from registered correction pairs."
msgstr ""
"Correction also helps user input. If user inputs a wrong word, groonga can "
"return correct words from registered correction pairs."

msgid "For example, there are registered correction pairs:"
msgstr "For example, there are registered correction pairs:"

msgid "wrong word"
msgstr "wrong word"

msgid "correct word"
msgstr "correct word"

msgid "grroonga"
msgstr "grroonga"

msgid "groonga"
msgstr "groonga"

msgid "gronga"
msgstr "gronga"

msgid "gronnga"
msgstr "gronnga"

msgid ""
"An user inputs \"gronga\" and groonga returns \"groonga\" because \"gronga\" "
"is in wrong word and corresponding correct word is \"groonga\"."
msgstr ""
"An user inputs \"gronga\" and groonga returns \"groonga\" because \"gronga\" "
"is in wrong word and corresponding correct word is \"groonga\"."

msgid ""
"An user inputs \"roonga\" and groonga returns nothing because \"roonga\" "
"isn't in wrong word."
msgstr ""
"An user inputs \"roonga\" and groonga returns nothing because \"roonga\" "
"isn't in wrong word."

msgid ""
"Suggestion helps that user filters many found documents. If user inputs a "
"query, groonga can return new queries that has more additional keywords from "
"registered related query pairs."
msgstr ""
"Suggestion helps that user filters many found documents. If user inputs a "
"query, groonga can return new queries that has more additional keywords from "
"registered related query pairs."

msgid "For example, there are registered related query pairs:"
msgstr "For example, there are registered related query pairs:"

msgid "keyword"
msgstr "keyword"

msgid "related query"
msgstr "related query"

msgid "groonga search engine"
msgstr "groonga search engine"

msgid "Google search"
msgstr "Google search"

msgid "speed"
msgstr "speed"

msgid "groonga speed"
msgstr "groonga speed"

msgid ""
"An user inputs \"groonga\" and groonga returns \"groonga search engine\" "
"because \"groonga\" is in keyword column and related query column is "
"\"groonga search engine\"."
msgstr ""
"An user inputs \"groonga\" and groonga returns \"groonga search engine\" "
"because \"groonga\" is in keyword column and related query column is "
"\"groonga search engine\"."

msgid ""
"An user inputs \"MySQL\" and groonga returns nothing because \"MySQL\" isn't "
"in keyword column values."
msgstr ""
"An user inputs \"MySQL\" and groonga returns nothing because \"MySQL\" isn't "
"in keyword column values."

msgid "Learning"
msgstr "Learning"

msgid ""
"The suggest feature requires registered data before using the feature. Those "
"data can be registered from user inputs. Gronnga-suggest-httpd and groonga-"
"suggest-learner commands are provided for the propose."
msgstr ""
"The suggest feature requires registered data before using the feature. Those "
"data can be registered from user inputs. Gronnga-suggest-httpd and groonga-"
"suggest-learner commands are provided for the propose."

msgid "The suggestion feature uses a search to compute suggested words:"
msgstr "The suggestion feature uses a search to compute suggested words:"

msgid ""
"Cooccurrence search can find related words from user's input. It uses user "
"submissions that will be learned from query logs, access logs and so on."
msgstr ""
"Cooccurrence search can find related words from user's input. It uses user "
"submissions that will be learned from query logs, access logs and so on."

msgid "search engine"
msgstr "search engine"

msgid "web search realtime"
msgstr "web search realtime"

msgid "Groonga creates the following suggestion pairs:"
msgstr "Groonga creates the following suggestion pairs:"

msgid "suggested words"
msgstr "suggested words"

msgid "web"
msgstr "web"

msgid "realtime"
msgstr "realtime"

msgid "Those pairs are created by the following steps:"
msgstr "Those pairs are created by the following steps:"

msgid ""
"Tokenizes user input query by TokenDelimit tokenizer that uses a space as "
"token delimiter. (e.g. \"search engine\" is tokenized to two tokens \"search"
"\" and \"engine\".)"
msgstr ""
"Tokenizes user input query by TokenDelimit tokenizer that uses a space as "
"token delimiter. (e.g. \"search engine\" is tokenized to two tokens \"search"
"\" and \"engine\".)"

msgid ""
"Creates a pair that is consists of a token and original query for each token."
msgstr ""
"Creates a pair that is consists of a token and original query for each token."

msgid ""
"If an user inputs \"search\" and cooccurrence search returns \"search engine"
"\" and \"web search realtime\" because \"search\" is in two input columns "
"and corresponding suggested word columns have \"search engine\" and \"web "
"search realtime\"."
msgstr ""
"If an user inputs \"search\" and cooccurrence search returns \"search engine"
"\" and \"web search realtime\" because \"search\" is in two input columns "
"and corresponding suggested word columns have \"search engine\" and \"web "
"search realtime\"."

msgid ""
"Groonga provides :doc:`/reference/commands/suggest` command to use "
"suggestion. `--type suggest` option requests suggestion"
msgstr ""
"Groonga provides :doc:`/reference/commands/suggest` command to use "
"suggestion. `--type suggest` option requests suggestion"

msgid ""
"For example, here is an command to get suggestion results by \"search\":"
msgstr ""
"For example, here is an command to get suggestion results by \"search\":"

msgid "2011-08-10T13:33:23+09:00: search engine (submit)"
msgstr "2011-08-10T13:33:23+09:00: search engine (submit)"

msgid "2011-08-10T13:33:28+09:00: web search realtime (submit)"
msgstr "2011-08-10T13:33:28+09:00: web search realtime (submit)"

msgid "Groonga can be learned from the submissions by the following command::"
msgstr "Groonga can be learned from the submissions by the following command::"

msgid "How to extract learning data"
msgstr "How to extract learning data"

msgid ""
"The learning data is stored into item_DATASET and pair_DATASET tables. By "
"using select command for such tables, you can all extract learing data."
msgstr ""
"The learning data is stored into item_DATASET and pair_DATASET tables. By "
"using select command for such tables, you can all extract learing data."

msgid "Here is the query to extract all learning data::"
msgstr "Here is the query to extract all learning data::"

msgid ""
"Without '--limit -1', you can't get all data. In pair table, the valid value "
"of freq0, freq1 and freq2 column must be larger than 0."
msgstr ""
"Without '--limit -1', you can't get all data. In pair table, the valid value "
"of freq0, freq1 and freq2 column must be larger than 0."

msgid ""
"Don't execute above query via HTTP request because enourmous number of "
"records are fetched."
msgstr ""
"Don't execute above query via HTTP request because enourmous number of "
"records are fetched."

msgid "Tutorial"
msgstr "Tutorial"

msgid "TODO..."
msgstr "TODO..."
