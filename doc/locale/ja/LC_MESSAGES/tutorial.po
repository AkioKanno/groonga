# Japanese translations for 1.2.1 package.
# Copyright (C) 2009-2012, Brazil, Inc
# This file is distributed under the same license as the groonga package.
# Kouhei Sutou <kou@clear-code.com>, 2011.
#
msgid ""
msgstr ""
"Project-Id-Version: 1.2.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2012-06-29 12:39\n"
"PO-Revision-Date: 2012-04-27 23:54+0900\n"
"Last-Translator: Kouhei Sutou <kou@clear-code.com>\n"
"Language-Team: Japanese\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../../source/example/tutorial/data-1.log:1
#: ../../../source/example/tutorial/data-2.log:1
#: ../../../source/example/tutorial/data-3.log:1
#: ../../../source/example/tutorial/data-4.log:1
#: ../../../source/example/tutorial/data-5.log:1
#: ../../../source/example/tutorial/data-6.log:1
#: ../../../source/example/tutorial/data-7.log:1
#: ../../../source/example/tutorial/data-8.log:1
#: ../../../source/example/tutorial/drilldown-1.log:1
#: ../../../source/example/tutorial/drilldown-2.log:1
#: ../../../source/example/tutorial/drilldown-3.log:1
#: ../../../source/example/tutorial/drilldown-4.log:1
#: ../../../source/example/tutorial/drilldown-5.log:1
#: ../../../source/example/tutorial/drilldown-6.log:1
#: ../../../source/example/tutorial/index-1.log:1
#: ../../../source/example/tutorial/index-2.log:1
#: ../../../source/example/tutorial/index-3.log:1
#: ../../../source/example/tutorial/index-4.log:1
#: ../../../source/example/tutorial/index-5.log:1
#: ../../../source/example/tutorial/index-6.log:1
#: ../../../source/example/tutorial/index-7.log:1
#: ../../../source/example/tutorial/introduction-1.log:1
#: ../../../source/example/tutorial/introduction-10.log:1
#: ../../../source/example/tutorial/introduction-11.log:1
#: ../../../source/example/tutorial/introduction-12.log:1
#: ../../../source/example/tutorial/introduction-13.log:1
#: ../../../source/example/tutorial/introduction-14.log:1
#: ../../../source/example/tutorial/introduction-15.log:1
#: ../../../source/example/tutorial/introduction-16.log:1
#: ../../../source/example/tutorial/introduction-17.log:1
#: ../../../source/example/tutorial/introduction-18.log:1
#: ../../../source/example/tutorial/introduction-2.log:1
#: ../../../source/example/tutorial/introduction-3.log:1
#: ../../../source/example/tutorial/introduction-4.log:1
#: ../../../source/example/tutorial/introduction-5.log:1
#: ../../../source/example/tutorial/introduction-6.log:1
#: ../../../source/example/tutorial/introduction-7.log:1
#: ../../../source/example/tutorial/introduction-8.log:1
#: ../../../source/example/tutorial/introduction-9.log:1
#: ../../../source/example/tutorial/match_columns-1.log:1
#: ../../../source/example/tutorial/match_columns-2.log:1
#: ../../../source/example/tutorial/match_columns-3.log:1
#: ../../../source/example/tutorial/match_columns-4.log:1
#: ../../../source/example/tutorial/micro_blog-1.log:1
#: ../../../source/example/tutorial/micro_blog-10.log:1
#: ../../../source/example/tutorial/micro_blog-2.log:1
#: ../../../source/example/tutorial/micro_blog-3.log:1
#: ../../../source/example/tutorial/micro_blog-4.log:1
#: ../../../source/example/tutorial/micro_blog-5.log:1
#: ../../../source/example/tutorial/micro_blog-6.log:1
#: ../../../source/example/tutorial/micro_blog-7.log:1
#: ../../../source/example/tutorial/micro_blog-8.log:1
#: ../../../source/example/tutorial/micro_blog-9.log:1
#: ../../../source/example/tutorial/network-1.log:1
#: ../../../source/example/tutorial/network-2.log:1
#: ../../../source/example/tutorial/network-3.log:1
#: ../../../source/example/tutorial/patricia_trie-1.log:1
#: ../../../source/example/tutorial/patricia_trie-2.log:1
#: ../../../source/example/tutorial/query_expansion-1.log:1
#: ../../../source/example/tutorial/query_expansion-2.log:1
#: ../../../source/example/tutorial/query_expansion-3.log:1
#: ../../../source/example/tutorial/search-1.log:1
#: ../../../source/example/tutorial/search-2.log:1
#: ../../../source/example/tutorial/search-3.log:1
#: ../../../source/example/tutorial/search-4.log:1
#: ../../../source/example/tutorial/search-5.log:1
#: ../../../source/example/tutorial/search-6.log:1
#: ../../../source/example/tutorial/search-7.log:1
#: ../../../source/tutorial/network.txt:31
#: ../../../source/tutorial/network.txt:48
#: ../../../source/tutorial/network.txt:112
msgid "Execution example::"
msgstr "実行例::"

#: ../../../source/tutorial.txt:6
msgid "Tutorial"
msgstr "チュートリアル"

# fa721fedb4f64992b485a0cd289bce93
#: ../../../source/tutorial/data.txt:11
msgid "Various data types"
msgstr "いろいろなデータの保存"

# 19e12e7217a54c47a4cbc3ab8081e1a7
#: ../../../source/tutorial/data.txt:13
msgid ""
"Groonga is a full text search engine but also serves as a column-oriented "
"data store. Groonga supports various data types, such as numeric types, "
"string types, date and time type, longitude and latitude types, etc. This "
"tutorial shows a list of data types and explains how to use them."
msgstr ""
"groongaは全文検索エンジンを起源として独自のカラムストアを持つに至るわけです"
"が、索引語や文書を保存するだけでなく、数値や文字列、日時や経緯度など、いろい"
"ろなデータを保存することができます。本チュートリアルでは、groongaで保存できる"
"データの種類、およびに保存の方法を説明します。"

# c9e13b292e424a658a2db5a95d21a417
#: ../../../source/tutorial/data.txt:16
msgid "Overview"
msgstr "データの種類"

# 19e12e7217a54c47a4cbc3ab8081e1a7
#: ../../../source/tutorial/data.txt:18
msgid ""
"The basic data types of groonga are roughly divided into 5 groups --- "
"boolean type, numeric types, string types, date/time type and longitude/"
"latitude types. The numeric types are further divided according to whether "
"integer or floating point number, signed or unsigned and the number of bits "
"allocated to each integer. The string types are further divided according to "
"the maximum length. The longitude/latitude types are further divided "
"according to the geographic coordinate system. For more details, see :doc:`/"
"type`."
msgstr ""
"groongaにおいて利用できる基本型は、真偽値、数値、文字列、日時、経緯度の5種類"
"に大別できます。基本型において、数値は整数・浮動小数点数の違い、符号の有無と"
"割り当てるビット数によって細分化できるほか、文字列は長さの上限によって細分化"
"できます。また、経緯度には測地系による分類があります。詳しくは :doc:`/type` "
"を参照してください。"

# 3ec01c2c1fbd42978e3a85da79958686
#: ../../../source/tutorial/data.txt:20
msgid ""
"In addition, groonga supports reference types and vector types. Reference "
"types are designed for accessing other tables. Vector types are designed for "
"storing a variable number of values in one element."
msgstr ""
"拡張型としては、別テーブルを参照するための情報であるテーブル参照を保存するこ"
"とができます。また、基本型もしくはテーブル参照を複数まとめて保存できるよう"
"に、ベクターカラムをサポートしています。"

# 9e6e98a709f14215910f8e5673e2ef46
#: ../../../source/tutorial/data.txt:22
msgid "First, let's create a table for this tutorial."
msgstr "それでは、本チュートリアルで使用するテーブルを作成しておきましょう。"

# 53d9f39eca8145b4a66147fda15bf49b
#: ../../../source/tutorial/data.txt:29
msgid "Boolean type"
msgstr "真偽値"

# 12f45b0a19194e02b1523b9f3645f175
#: ../../../source/tutorial/data.txt:31
msgid ""
"The boolean type is used to store true or false. To create a boolean type "
"column, specify Bool to the `type` parameter of :doc:`/commands/"
"column_create` command. The default value of the boolean type is false."
msgstr ""
"ブール型は真偽値（true/false）を表現するための型です。ブール型のカラムを作成"
"するには、 :doc:`/commands/column_create` コマンドの `type` 引数に Bool を指"
"定します。ブール型のデフォルト値はfalseです。"

# b0efb64bd2724bcc88a28ff9460b8fa0
#: ../../../source/tutorial/data.txt:33
msgid ""
"The following example creates a boolean type column and adds three records. "
"Note that the third record has the default value because no value is "
"specified."
msgstr ""
"以下の例では、ブール型のカラムを作成し、3つのレコードを追加します。3番目のレ"
"コードについては、値を省略しているため、デフォルト値が格納されます。"

# 5beba7b848dd4414b24dd6957c7beda2
#: ../../../source/tutorial/data.txt:47
msgid "Numeric types"
msgstr "数値"

# 14cc63c41f094d08aac73106b134640b
#: ../../../source/tutorial/data.txt:49
msgid ""
"The numeric types are divided into integer types and a floating point number "
"type. The integer types are further divided into the signed integer types "
"and unsigned integer types. In addition, you can choose the number of bits "
"allocated to each integer. For more details, see :doc:`/type`. The default "
"value of the numeric types is 0."
msgstr ""
"数値型は、整数と浮動小数点数に分けることができます。整数は、符号付き整数と符"
"号なし整数に分けることができるだけでなく、割り当てるビット数によっても分ける"
"ことができます。割り当てるビット数を大きくすると、カラムのサイズは大きくなっ"
"てしまいますが、表現できる整数の範囲を大きくすることができます。詳しくは :"
"doc:`/type` を参照してください。数値型のデフォルト値はいずれも0です。"

# 92862bee04a048cf97411a6649be1a0f
#: ../../../source/tutorial/data.txt:51
msgid ""
"The following example creates an Int8 column and a Float column, and then "
"updates existing records. The :doc:`/commands/load` command updates the "
"weight column as expected. On the other hand, the price column values are "
"different from the specified values because 15.9 is not an integer and 200 "
"is too large. 15.9 is converted to 15 by removing the fractional part. 200 "
"causes an overflow and the result becomes -56. Note that the result of an "
"overflow/underflow is undefined."
msgstr ""
"以下の例では、Int8型のカラムとFloat型のカラムを作成し、既存のレコードを更新し"
"ます。weightカラムについては、指定した値が問題なく格納されています。一方、"
"priceカラムに指定した小数については、小数点以下を切り捨てた値が格納されていま"
"す。また、表現できる範囲を超える値を格納しようとした2番目のレコードについて"
"は、指定した値とは異なる値が格納されています。このように、表現できる範囲を超"
"える値を指定すると、操作後の値は未定義になるので注意してください。"

# ac9727f7f978484497a9972a67ad950a
#: ../../../source/tutorial/data.txt:66
msgid "String types"
msgstr "文字列"

# 6f9b195b9b494b518887da51ea243c5b
#: ../../../source/tutorial/data.txt:68
msgid ""
"The string types are divided according to the maximum length. For more "
"details, see :doc:`/type`. The default value is the zero-length string."
msgstr ""
"文字列型は、長さの上限によって分けることができます。詳しくは :doc:`/type` を"
"参照してください。文字列型のデフォルト値は長さ0の文字列です。"

# b0efb64bd2724bcc88a28ff9460b8fa0
#: ../../../source/tutorial/data.txt:70
msgid ""
"The following example creates a ShortText column and updates existing "
"records. The third record has the default value because not updated."
msgstr ""
"以下の例では、ShortText型のカラムを作成し、IDが1と2のレコードを更新します。更"
"新しないレコードについては、デフォルト値のままとなります。"

# 7d03964b5a874744bfe1e3a6551e4e51
#: ../../../source/tutorial/data.txt:83
msgid "Date and time type"
msgstr "日時"

# d3765644e96044df8c541833e8989c51
#: ../../../source/tutorial/data.txt:85
msgid ""
"The date and time type of groonga is Time. Actually, a Time column stores a "
"date and time as the number of microseconds since the Epoch, 1970-01-01 "
"00:00:00. A Time value can represent a date and time before the Epoch "
"because the actual data type is a signed integer. Note that :doc:`/commands/"
"load` and :doc:`/commands/select` commands use a decimal number to represent "
"a data and time in seconds. The default value is 0.0, which means the Epoch."
msgstr ""
"日時を表現するための型はTimeです。内部では1970年1月1日0時0分0秒を基準とする経"
"過時間をマイクロ秒単位で表現します。符号付きの整数を用いるため、1970年以前の"
"日時も表現することができます。内部表現はマイクロ秒単位の整数ですが、 :doc:`/"
"commands/load` コマンドおよび :doc:`/commands/select` コマンドでは、経過秒数"
"による指定・表示となります。デフォルト値は1970年1月1日0時0分0秒のことを表す"
"0.0です。"

# b0efb64bd2724bcc88a28ff9460b8fa0
#: ../../../source/tutorial/data.txt:87
msgid ""
"The following example creates a Time column and updates existing records. "
"The first record has the default value because not updated."
msgstr ""
"以下の例では、Time型のカラムを作成し、IDが2と3のレコードを更新します。更新し"
"ないレコードについては、デフォルト値のままとなります。"

# 07daa91307514527811f3676dc10f746
#: ../../../source/tutorial/data.txt:100
msgid "Longitude and latitude types"
msgstr "経緯度"

# 6f9b195b9b494b518887da51ea243c5b
#: ../../../source/tutorial/data.txt:102
msgid ""
"The longitude and latitude types are divided according to the geographic "
"coordinate system. For more details, see :doc:`/type`. To represent a "
"longitude and latitude, groonga uses a string formatted as follows:"
msgstr ""
"経緯度を表現するための型は、測地系によって分けることができます。詳しくは :"
"doc:`/type` を参照してください。経緯度の指定・表示には、以下に示す形式の文字"
"列を使います。"

# bc2afac58e83444099f6a2e282104d04
#: ../../../source/tutorial/data.txt:104
msgid ""
"\"longitude x latitude\" in milliseconds (e.g.: \"128452975x503157902\")"
msgstr "\"経度のミリ秒表記x緯度のミリ秒表記\" （例: \"128452975x503157902\"）"

# e1f3ea2983484088b1ba1af18ef828ef
#: ../../../source/tutorial/data.txt:105
msgid "\"longitude x latitude\" in degrees (e.g.: \"35.6813819x139.7660839\")"
msgstr "\"経度の度数表記x緯度の度数表記\" （例: \"35.6813819x139.7660839\"）"

# 88eb9be1200c4811a3a98f1905145535
#: ../../../source/tutorial/data.txt:107
msgid ""
"A number with/without a decimal point represents a longitude or latitude in "
"milliseconds/degrees respectively. Note that a combination of a number with "
"a decimal point and a number without a decimal point (e.g. 35.1x139) must "
"not be used. A comma (',') is also available as a delimiter. The default "
"value is \"0x0\"."
msgstr ""
"小数点を含んでいなければミリ秒表記、小数点を含んでいれば度数表記として扱われ"
"ます。ミリ秒表記と度数表記を混ぜたときの動作は未定義なので注意してください。"
"経度と緯度の区切りとしては、'x' のほかに ',' を使うことができます。経緯度のデ"
"フォルト値は \"0x0\" です。"

# 4d10a27a69284c1ba1699fcb8ead8cfe
#: ../../../source/tutorial/data.txt:109
msgid ""
"The following example creates a WGS84GeoPoint column and updates existing "
"records. The second record has the default value because not updated."
msgstr ""
"以下の例では、世界測地系を用いるWGS84GeoPoint型のカラムを作成し、IDが1と3のレ"
"コードを更新します。更新しないレコードについては、デフォルト値のままとなりま"
"す。"

# 5ddabb8ff97a4f54ac6b61a035092980
#: ../../../source/tutorial/data.txt:122
msgid "Reference types"
msgstr "テーブル参照"

# 7f6c518d20094892b435340a53ddee21
#: ../../../source/tutorial/data.txt:124
msgid ""
"Groonga supports a reference column, which stores references to records in "
"its associated table. In practice, a reference column stores the IDs of the "
"referred records in the associated table and enables access to those records."
msgstr ""
"groongaでは、テーブル参照のカラム、すなわち関連付けたテーブルを参照するカラム"
"を作成できます。より正確には、カラム作成時に参照先となるテーブルとの関連付け"
"をおこない、参照先テーブルにおけるレコードIDを格納しておくことにより、参照先"
"のレコードにアクセスできるようにします。"

# 5f41c9f3d5bc416590fd143e82eccd53
#: ../../../source/tutorial/data.txt:126
msgid ""
"You can specify a column in the associated table to the `output_columns` "
"parameter of a :doc:`/commands/select` command. The format is \"Src.Dest\" "
"where Src is the name of the reference column and Dest is the name of the "
"target column. If only the reference column is specified, it is handled as "
"\"Src._key\". Note that if a reference does not point to a valid record, a :"
"doc:`/commands/select` command outputs the default value of the target "
"column."
msgstr ""
"テーブル参照のカラムがあるときは、 `output_columns` 引数に \"参照元カラム.参"
"照先カラム\" と指定することにより、参照先カラムの値を取り出すことができます。"
"参照元カラムのみを指定したときは、 \"参照元カラム名._key\" と同様の扱いとな"
"り、参照先レコードの主キーが取り出されます。テーブル参照が有効なレコードを指"
"していないときは、参照先カラムのデフォルト値が取り出されるようになっていま"
"す。"

# c3a7a7cea377485d81cd4ec552c15694
#: ../../../source/tutorial/data.txt:128
msgid ""
"The following example adds a reference column to the Site table that was "
"created in the previous tutorial. The new column, named link, is designed "
"for storing links among records in the Site table."
msgstr ""
"ここでは、先のチュートリアルで作成したSiteテーブルにlinkという新たなカラムを"
"作成し、サイト間のリンク関係を保存できるようにしてみましょう。"

# fcab1957c86f4f028958b472cf6dda56
#: ../../../source/tutorial/data.txt:137
msgid ""
"The `type` parameter of the :doc:`/commands/column_create` command specifies "
"the table to be associated with the reference column. In this example, the "
"reference column is associated with the own table. Then, the :doc:`/commands/"
"load` command registers a link from \"http://example.org\" to \"http://"
"example.net\". Note that a reference column requires the primary key, not "
"the ID, of the record to be referred to. After that, the link is confirmed "
"by the :doc:`/commands/select` command. In this case, the primary key and "
"the title of the referred record are output because link._key and link.title "
"are specified to the `output_columns` parameter."
msgstr ""
"テーブル参照のカラムを作成するときは、 `type` 引数に参照先テーブルを指定しま"
"す。この例では、同じテーブルに含まれる別のレコードを参照させたいので、Siteを"
"指定することになります。次に、 \"http://example.org/\" から \"http://example."
"net/\" へのリンクを登録しています。テーブル参照を作成するときは、IDではなく主"
"キーを指定することに注意してください。最後に、リンクの内容を確認しています。"
"この例では、  `output_columns` 引数に link._key と link.title を指定している"
"ので、参照先の主キーとタイトルが表示されています。"

#: ../../../source/tutorial/data.txt:140
msgid "Vector types"
msgstr "ベクターカラム"

# 2a92c171b54e4efca37e0e72e454c7bb
#: ../../../source/tutorial/data.txt:142
msgid ""
"Groonga supports a vector column, in which each element can store a variable "
"number of values. To create a vector column, specify the COLUMN_VECTOR flag "
"to the `flags` parameter of a :doc:`/commands/column_create` command. A "
"vector column is useful to represent a many-to-many relationship."
msgstr ""
":doc:`/commands/column_create` コマンドでカラムを作成するとき、 `flags` 引数"
"にCOLUMN_VECTORフラグを指定すると、 `type` 引数に指定した型の配列を格納するカ"
"ラムになります。このようなカラムのことは、ベクターカラムと呼びます。ベクター"
"カラムは、各レコードに複数の値を格納できるため、一対多の参照関係を表すのに便"
"利です。"

# 11d030f09d2f467baa42c4a27ff06b7e
#: ../../../source/tutorial/data.txt:144
msgid ""
"The previous example used a regular column, so each record could have at "
"most one link. Obviously, the specification is insufficient because a site "
"usually has more than one links. To solve this problem, the following "
"example uses a vector column."
msgstr ""
"さきほどテーブル参照の例として作成したカラムでは、各サイトに一つのリンクしか"
"保存できませんでした。通常は一つのサイトから多くのサイトにリンクが張られてい"
"るので、これでは残念な仕様になってしまいます。そこで、ベクターカラムを使っ"
"て、複数のリンクを保存できるようにしてみましょう。"

# fcab1957c86f4f028958b472cf6dda56
#: ../../../source/tutorial/data.txt:155
msgid ""
"The only difference at the first step is the `flags` parameter that "
"specifies to create a vector column. The `type` parameter of the :doc:`/"
"commands/column_create` command is the same as in the previous example. "
"Then, the :doc:`/commands/load` command registers three links from \"http://"
"example.org/\" to \"http://example.net/\", \"http://example.org/\" and "
"\"http://example.com/\". After that, the links are confirmed by the :doc:`/"
"commands/select` command. In this case, the primary keys and the titles are "
"output as arrays because links._key and links.title are specified to the "
"`output_columns` parameter."
msgstr ""
"新たなカラムにはSiteテーブルに対する参照の配列を格納するので、 `type` 引数に"
"Siteを指定するとともに、 `flags` 引数にCOLUMN_VECTORフラグを指定しています。"
"次に、 :doc:`/commands/load` による更新では、 \"http://example.org/\" から "
"\"http://example.net/\" へのリンクに加えて、 \"http://example.org/\" と "
"\"http://example.com/\" へのリンクも登録しています。そして、最後にリンクの内"
"容を確認しています。この例では、 `output_columns` 引数に links._key と links."
"title を指定しているので、参照先の主キーとタイトルをそれぞれ配列にしたものが"
"表示されています。"

#: ../../../source/tutorial/drilldown.txt:11
msgid "ドリルダウン"
msgstr ""

#: ../../../source/tutorial/drilldown.txt:13
msgid ""
"groongaでは、特定のカラム値で検索結果をグループ化することができます。これをド"
"リルダウンと呼びます。"
msgstr ""

#: ../../../source/tutorial/drilldown.txt:15
msgid ""
"Siteテーブルに２つのカラムを追加します。TLDドメイン名を格納するdomainカラム"
"と、国名を格納するcountryカラムです。これらのカラムの型は、それぞれドメイン名"
"を主キーとするSiteDomainテーブルと、国名を主キーとするSiteCountryテーブルとし"
"ます。"
msgstr ""

#: ../../../source/tutorial/drilldown.txt:36
msgid "domainカラムとcountryカラムでドリルダウンを行う例を以下に示します。"
msgstr ""

#: ../../../source/tutorial/drilldown.txt:42
msgid ""
"テーブル型を持つカラムに対してドリルダウンを行った場合、参照先のテーブルに存"
"在するカラム値を取得することもできます。ドリルダウンを行ったテーブルには、"
"_nsubrecsという仮想的なカラムが追加されます。このカラムには、グループ化された"
"レコード数が入ります。"
msgstr ""

#: ../../../source/tutorial/drilldown.txt:48
msgid ""
"複数のカラムに対してドリルダウンを行うことができます。複数のカラムに対してド"
"リルダウンを行う場合には、drilldownパラメータにカラム名をカンマ区切りで与えま"
"す。"
msgstr ""

#: ../../../source/tutorial/drilldown.txt:54
msgid ""
"ドリルダウン結果を並びかえることができます。例えば、_nsubrecsパラメータの降順"
"で並び替えることができます。"
msgstr ""

#: ../../../source/tutorial/drilldown.txt:60
msgid ""
"ドリルダウン結果は、デフォルトでは10件のみ表示されます。drilldown_offsetパラ"
"メータと、drilldown_limitパラメータによって、offsetとlimitを指定することがで"
"きます。"
msgstr ""

#: ../../../source/tutorial/drilldown.txt:66
msgid ""
"文字列型のカラムに対するドリルダウンは、他の型でのドリルダウンに比べて低速で"
"す。文字列でのドリルダウンを行いたい場合には、このチュートリアルのように、文"
"字列型を主キーとするテーブルを別途作成し、そのテーブルを型とするカラムを作成"
"します。"
msgstr ""

#: ../../../source/tutorial/index.txt:11
msgid "タグ検索・参照関係の逆引き"
msgstr ""

#: ../../../source/tutorial/index.txt:13
msgid ""
"本チュートリアルで、groongaはカラム値として他のテーブルへの参照の配列を持つこ"
"とができることを紹介いたしました。実は、テーブルへの参照の配列データを用いる"
"ことによって、いわゆるタグ検索を行うことが可能となります。"
msgstr ""

#: ../../../source/tutorial/index.txt:15
msgid ""
"タグ検索はgroongaの転置インデックスというデータ構造を用いて高速に行われます。"
msgstr ""

#: ../../../source/tutorial/index.txt:18
msgid "タグ検索"
msgstr ""

#: ../../../source/tutorial/index.txt:20
msgid ""
"動画共有サイトの検索エンジンを作ることを想定します。1つの動画には、その動画の"
"特徴を表す、複数の語句が付与されています。「ある語句が付与されている動画の一"
"覧を取得する」検索を行いたいとします。"
msgstr ""

#: ../../../source/tutorial/index.txt:22
msgid "実際に、動画情報のテーブルを作成し、検索をしてみましょう。"
msgstr ""

#: ../../../source/tutorial/index.txt:24
msgid ""
"動画の情報を保存する、Videoテーブルを作成します。Videoテーブルでは、動画のタ"
"イトルをtitleカラムに、動画のタグ情報をtagsカラムにTagテーブル型で複数格納し"
"ています。 タグの情報を保存する、Tagテーブルを作成します。Tagテーブルでは、タ"
"グ文字列を主キーに格納し、Videoテーブルのtagsカラムに対するインデックスを"
"index_tagsカラムに格納しています。"
msgstr ""

#: ../../../source/tutorial/index.txt:46
msgid ""
"インデックスカラムを作成すると、全文検索が高速に行えるようになります。イン"
"デックスカラムは、対象のカラムに保存されたデータに更新があったとき、自動的に"
"更新されます。"
msgstr ""

#: ../../../source/tutorial/index.txt:48
msgid "「ある語句が付与されている動画の一覧を取得する」検索を行いましょう。"
msgstr ""

#: ../../../source/tutorial/index.txt:56
msgid ""
"このように、「Variety」、「Sports」、「Animation」のようなタグで検索を行うこ"
"とができました。"
msgstr ""

#: ../../../source/tutorial/index.txt:59
msgid "参照関係の逆引き"
msgstr ""

#: ../../../source/tutorial/index.txt:61
msgid ""
"groongaはテーブル間の参照関係の逆引きを高速に行うためのインデックスを付与する"
"ことができます。タグ検索は、その1例にすぎません。"
msgstr ""

#: ../../../source/tutorial/index.txt:63
msgid ""
"例えば、ソーシャルネットワーキングサイトにおける友人関係を逆引き検索すること"
"ができます。"
msgstr ""

#: ../../../source/tutorial/index.txt:65
msgid ""
"以下の例では、ユーザー情報を格納するUserテーブルを作成し、ユーザー名を格納す"
"るusernameカラム、ユーザーの友人一覧を配列で格納するfriendsカラムとそのイン"
"デックスのindex_friendsカラムを追加しています。"
msgstr ""

#: ../../../source/tutorial/index.txt:83
msgid ""
"指定したユーザーを友人リストに入れているユーザーの一覧を表示してみましょう。"
msgstr ""

#: ../../../source/tutorial/index.txt:90
msgid ""
"さらに、ドリルダウンを使って、友人リストに入っている数の一覧を表示してみま"
"しょう。"
msgstr ""

#: ../../../source/tutorial/index.txt:96
msgid "このように、テーブルの参照関係を逆にたどる検索ができました。"
msgstr ""

#: ../../../source/tutorial/index.txt:99
msgid "インデックス付きジオサーチ"
msgstr ""

# 922d1d03bd144f599ee52828119b3284
#: ../../../source/tutorial/index.txt:101
msgid ""
"位置情報のカラムに対して、インデックスを付与することが出来ます。大量の位置情"
"報レコードを検索する場合に、検索速度が速くなります。"
msgstr ""

#: ../../../source/tutorial/index.txt:114
msgid ""
"同様に、位置情報レコードを用いてソートする場合に、ソート速度が速くなります。"
msgstr ""

# 3da56138e9904419b4dcc5d036e81a07
#: ../../../source/tutorial/introduction.txt:9
msgid "Basic operations"
msgstr "基本的な操作"

# 7a5094c3e47443369b7daf194fe51c68
#: ../../../source/tutorial/introduction.txt:11
msgid ""
"A groonga package provides a C library (libgroonga) and a command line tool "
"(groonga). This tutorial explains how to use the command line tool, with "
"which you can create/operate databases, start a server, establish a "
"connection with a server, etc."
msgstr ""
"groongaには、Cのライブラリとして使用する方法と、groonga実行ファイルを通して使"
"用する方法があります。本チュートリアルでは、groonga実行ファイルを使用する方法"
"について説明します。groonga実行ファイルを使って、データベースの作成・操作・"
"サーバの起動・サーバへの接続などの操作が行えます。"

# 2053368aefe74a5d9363bf95cb157d4a
#: ../../../source/tutorial/introduction.txt:14
msgid "Create a database"
msgstr "データベースの作成"

# 6f92cc5132bb4166890341665e393217
#: ../../../source/tutorial/introduction.txt:16
msgid ""
"The first step to using groonga is to create a new database. The following "
"shows how to do it."
msgstr ""
"groongaユーザへの第一歩はデータベースの作成です。まずは以下の書式をご覧くださ"
"い。"

#: ../../../source/tutorial/introduction.txt:18
#: ../../../source/tutorial/introduction.txt:37
#: ../../../source/tutorial/network.txt:23
#: ../../../source/tutorial/network.txt:42
#: ../../../source/tutorial/network.txt:59
#: ../../../source/tutorial/network.txt:90
#: ../../../source/tutorial/network.txt:104
msgid "Form::"
msgstr "書式::"

# 308db7bb25d64bfe990b1deaa74997b3
#: ../../../source/tutorial/introduction.txt:22
msgid ""
"The `-n` option specifies to create a new database and DB_PATH specifies the "
"path of the new database. Actually, a database consists of a series of files "
"and DB_PATH specifies the file which will be the entrance to the new "
"database. DB_PATH also specifies the path prefix for other files. Note that "
"database creation fails if DB_PATH points to an existing file."
msgstr ""
"`-n` オプションは、データベースの作成を指示します。DB_PATHは、新しく作成する"
"データベースのパスを指定します。データベースは複数のファイルによって構成され"
"るため、正確には、データベースの入り口となるファイルのパスとして使用されま"
"す。また、データベースを構成する他のファイルについては、DB_PATHがパスのプレ"
"フィックスとして使用されます。指定されたパスにファイルが存在しているときは失"
"敗するので注意してください。"

#: ../../../source/tutorial/introduction.txt:24
msgid ""
"This command creates a new database and then enters into interactive mode in "
"which groonga prompts you to enter commands for operating that database. You "
"can terminate this mode with Ctrl-d."
msgstr ""
"上記のコマンドは、データベースを作成してから、コマンドの入力を受け付ける対話"
"モードに入ります。Ctrlキーを押しながらdキーを押すと、対話モードから抜けること"
"ができます。"

# 235b9730698e402aa21334e1958efc1e
#: ../../../source/tutorial/introduction.txt:30
msgid ""
"After this database creation, you can find a series of files in /tmp/groonga-"
"databases."
msgstr ""
"データベースを作成に成功すれば、/tmp/groonga-databases以下にデータベースを構"
"成するファイルが配置されます。"

# d658120aeaf84578b997493e5e6c9737
#: ../../../source/tutorial/introduction.txt:33
msgid "Operate a database"
msgstr "データベースの操作"

# f8c8c0a35b004171b80f3188d5ba7ee1
#: ../../../source/tutorial/introduction.txt:35
msgid "The following shows how to operate an existing database."
msgstr "以下の書式は、既存のデータベースを操作する方法を示しています。"

# 98d46d97a1e34f3e8151087450cb3c0d
#: ../../../source/tutorial/introduction.txt:41
msgid ""
"DB_PATH specifies the path of a target database. This command fails if the "
"specified database does not exist."
msgstr ""
"DB_PATHには操作対象のデータベースを指定します。指定したデータベースが存在しな"
"いときは失敗します。"

# bbd1e3b24ab142a9a23b30d186a1bfb5
#: ../../../source/tutorial/introduction.txt:43
msgid ""
"If COMMAND is specified, groonga executes COMMAND and returns the result. "
"Otherwise, groonga starts in interactive mode that reads commands from the "
"standard input and executes them one by one. This tutorial focuses on the "
"interactive mode."
msgstr ""
"COMMAND が指定された場合、COMMAND を実行した後、実行結果を返します。指定され"
"なかった場合には、対話モードに入ります。対話モードでは、標準入力からコマンド"
"を読み込み、順次実行します。本チュートリアルでは、対話モードを主に使用しま"
"す。"

#: ../../../source/tutorial/introduction.txt:45
msgid ""
"Let's see the status of a groonga process by using a :doc:`/commands/status` "
"command."
msgstr ""
"それでは、 :doc:`/commands/status` コマンドを実行して、groongaの実行状態を確"
"認してみましょう。"

# f20f73567cf74f89928a062e06b51594
#: ../../../source/tutorial/introduction.txt:52
msgid ""
"As shown in the above example, a command returns a JSON array. The first "
"element contains an error code, execution time, etc. The second element is "
"the result of an operation."
msgstr ""
"以上のように、コマンドの実行結果は基本的にjson形式の配列として返却されます。"
"配列の先頭には、エラーコードや実行時間などの情報が入ります。2番目の要素には、"
"指示された操作の実行結果が入ります。"

# 039d52210dbb4bbf8923efd307eb8be8
#: ../../../source/tutorial/introduction.txt:55
msgid "Command format"
msgstr "コマンドの書式"

# 7d741d7734244269b7bed966b12359ed
#: ../../../source/tutorial/introduction.txt:57
msgid "Commands for operating a database accept arguments as follows::"
msgstr "データベースを操作するコマンドには、以下の書式で引数を与えます。::"

#: ../../../source/tutorial/introduction.txt:63
msgid ""
"In the first form, arguments must be passed in order. This kind of arguments "
"are called positional arguments because the position of each argument "
"determines its meaning."
msgstr ""
"書式1では値を適切な順番で渡す必要があります。このような引数は、位置によって値"
"の意味が決まるため、位置固定引数などと呼ばれることもあります。"

#: ../../../source/tutorial/introduction.txt:65
msgid ""
"In the second form, you can specify a parameter name with its value. So, the "
"order of arguments is not defined. This kind of arguments are known as named "
"parameters or keyword arguments."
msgstr ""
"書式2では値を名前と一緒に渡します。そのため、任意の順序で引数を指定することが"
"できます。このような引数は、名前付き引数やキーワード引数と呼ばれることもあり"
"ます。"

# 7da00e489d7f4bbd835e4e19057de278
#: ../../../source/tutorial/introduction.txt:67
msgid ""
"If you want to specify a value which contains white-spaces or special "
"characters, such as quotes and parentheses, please enclose the value with "
"single-quotes or double-quotes."
msgstr ""
"空白や特殊な記号（ダブルクォート、シングルクォート、および丸括弧）を含む値を"
"指定したいときは、シングルクォート(')かダブルクォート(\")で値を囲むようにして"
"ください。"

# 8ae549a22ed54274a31717f115927311
#: ../../../source/tutorial/introduction.txt:69
msgid ""
"For details, see also the paragraph of \"command\" in :doc:`/executables/"
"groonga`."
msgstr ""
"詳しくは、 :doc:`/executables/groonga` のコマンドの項を参考にしてください。"

# 3da56138e9904419b4dcc5d036e81a07
#: ../../../source/tutorial/introduction.txt:72
msgid "Basic commands"
msgstr "主なコマンド"

# 602f9e43757345a1b0bc3a57a5b595ea
#: ../../../source/tutorial/introduction.txt:75
msgid "shows status of a groonga process."
msgstr "groongaプロセスの状態を表示します。"

# f35fc92dd787414ebd0561453131adb4
#: ../../../source/tutorial/introduction.txt:77
msgid "shows a list of tables in a database."
msgstr "データベースに定義されているテーブルのリストを表示します。"

# e18aeb6cbc8b4c28b0cb38508c6c8b00
#: ../../../source/tutorial/introduction.txt:79
msgid "shows a list of columns in a table."
msgstr "テーブルに定義されているカラムのリストを表示します。"

# 0d2bb03bc0114bbb8ad3a1b9670c865d
#: ../../../source/tutorial/introduction.txt:81
msgid "adds a table to a database."
msgstr "データベースにテーブルを追加します。"

# 714cfb440b37481d81291c5386fce6b1
#: ../../../source/tutorial/introduction.txt:83
msgid "adds a column to a table."
msgstr "テーブルにカラムを追加します。"

#: ../../../source/tutorial/introduction.txt:85
msgid "searches records from a table and shows the result."
msgstr "テーブルに含まれるレコードを検索して表示します。"

# 1e5193b6ca864ba3b773170879f49631
#: ../../../source/tutorial/introduction.txt:87
msgid "inserts records to a table."
msgstr "テーブルにレコードを挿入します。"

# 92c83c9cbfde4c2b8d67b2897204b7a2
#: ../../../source/tutorial/introduction.txt:90
msgid "Create a table"
msgstr "テーブルの作成"

# 1e74fb8068674cafb7c2776d998e7ce8
#: ../../../source/tutorial/introduction.txt:92
msgid "A :doc:`/commands/table_create` command creates a new table."
msgstr ":doc:`/commands/table_create` コマンドを使用してテーブルを作成します。"

#: ../../../source/tutorial/introduction.txt:94
msgid ""
"In most cases, a table has a primary key which must be specified with its "
"data type and index type."
msgstr ""
"groongaのテーブルには基本的に主キーが必要であり、テーブルを作成する際には型と"
"格納方法も併せて指定する必要があります。"

#: ../../../source/tutorial/introduction.txt:96
msgid ""
"There are various data types such as integers, strings, etc. See also :doc:`/"
"type` for more details. The index type determines the search performance and "
"the availability of prefix searches. The details will be described later."
msgstr ""
"型には数値や文字列などがあります。ここではデータの種類を表しているものという"
"程度に考えてください。詳細は :doc:`/type` に記述されています。主キーの格納方"
"法は、主キーを条件とする検索にかかる時間や、前方一致検索の可否などを左右しま"
"す。こちらも後で説明します。"

# d31322b60f8545a581404b1d2838bd5f
#: ../../../source/tutorial/introduction.txt:98
msgid ""
"Let's create a table. The following example creates a table with a primary "
"key. The `name` parameter specifies the name of the table. The `flags` "
"parameter specifies the index type for the primary key. The `key_type` "
"parameter specifies the data type of the primary key."
msgstr ""
"それでは、テーブルを作成してみましょう。以下の例では、主キーのあるテーブルを"
"作成します。 `name` 引数はテーブルの引数を指定します。 `flags` 引数は主キーの"
"格納方法を指定するために使っています。 `key_type` 引数は主キーの型を指定しま"
"す。"

# 3ee9ad487d034b6c8c45529715afec0f
#: ../../../source/tutorial/introduction.txt:104
msgid ""
"The second element of the result indicates that the operation succeeded."
msgstr "実行結果の第2要素は、操作が成功したことを示しています。"

# 92c83c9cbfde4c2b8d67b2897204b7a2
#: ../../../source/tutorial/introduction.txt:107
msgid "View a table"
msgstr "テーブルの表示"

# 8cb3ff01469d48e28b6875b2554741e8
#: ../../../source/tutorial/introduction.txt:109
msgid "A :doc:`/commands/select` command can enumerate records in a table."
msgstr ""
":doc:`/commands/select` コマンドを用いて、テーブルの中身を表示することができ"
"ます。"

#: ../../../source/tutorial/introduction.txt:115
msgid ""
"When only a table name is specified with a `table` parameter, a :doc:`/"
"commands/select` command returns the first (at most) 10 records in the "
"table. [0] in the result shows the number of records in the table. The next "
"array is a list of columns. [\"_id\",\"Uint32\"] is a column of UInt32, "
"named _id. [\"_key\",\"ShortText\"] is a column of ShortText, named _key."
msgstr ""
":doc:`/commands/select` にテーブル名のみを指定すると、指定したテーブルの中身"
"を10件まで表示します。実行結果の[0]はテーブルに含まれるレコードの数を示してい"
"ます。今回は何も登録されていないため0件です。レコード数の次に表示されている配"
"列はテーブルの構成を示しています。[\"_id\",\"Uint32\"]はUInt32型の値を持つ_id"
"という名前のカラム、[\"_key\",\"ShortText\"]はShortText型の値を持つ_keyという"
"名前のカラムをそれぞれ表しています。"

# 1a57023af4614d00a11b2a36f650aa4b
#: ../../../source/tutorial/introduction.txt:117
msgid ""
"The above two columns, _id and _key, are the necessary columns. The _id "
"column stores IDs those are automatically allocated by groonga. The _key "
"column is associated with the primary key. You are not allowed to rename "
"these columns."
msgstr ""
":doc:`/commands/table_create` コマンドで作成したテーブルには、最初から_id, "
"_keyという2つのカラムがあります。_idはgroongaが自動的に付与するID番号が格納さ"
"れるカラムです。_keyは主キーが格納されるカラムです。これらのカラム名を変更す"
"ることはできません。"

# bb371206793e407ab12db2864ee8d152
#: ../../../source/tutorial/introduction.txt:120
msgid "Create a column"
msgstr "カラムの作成"

# 4e5488d852844f238c41dfc94e49fa73
#: ../../../source/tutorial/introduction.txt:122
msgid "A :doc:`/commands/column_create` command creates a new column."
msgstr ""
":doc:`/commands/column_create` コマンドを用いて、カラムを作成することができま"
"す。"

# f44e8a1aae7145509172f036a73737fd
#: ../../../source/tutorial/introduction.txt:124
msgid ""
"Let's add a column. The following example adds a column to the Site table. "
"The `table` parameter specifies the target table. The `name` parameter "
"specifies the name of the column. The `type` parameter specifies the data "
"type of the column."
msgstr ""
"それでは、カラムを作成してみましょう。以下の例では、新しいカラムをSiteテーブ"
"ルに追加します。 `table` 引数はテーブルの名前を指定します。 `name` 引数は新し"
"いカラムの名前を指定します。 `type` 引数はカラムに格納する値の型を指定しま"
"す。"

# f32c5902673741f7b30561531cef7f9a
#: ../../../source/tutorial/introduction.txt:132
msgid "Load records"
msgstr "データのロード"

# 4e5488d852844f238c41dfc94e49fa73
#: ../../../source/tutorial/introduction.txt:134
msgid ""
"A :doc:`/commands/load` command loads JSON-formatted records into a table."
msgstr ""
":doc:`/commands/load` コマンドは、JSON形式のレコードを受け取り、テーブルに格"
"納します。"

#: ../../../source/tutorial/introduction.txt:136
msgid "The following example loads nine records into the Site table."
msgstr "以下の例では9つのレコードをSiteテーブルに格納します。"

# e98df732f0ac45b1bfca3c78d2463864
#: ../../../source/tutorial/introduction.txt:153
msgid ""
"The second element of the result indicates how many records were "
"successfully loaded. In this case, all the records are successfully loaded."
msgstr ""
"実行結果の第2要素はロードされたレコードの数を示しています。上記の操作では、す"
"べてのレコードを問題なくロードできています。"

# 370b2f236b6f4af78389aafc61011d31
#: ../../../source/tutorial/introduction.txt:155
msgid "Let's make sure that these records are correctly stored."
msgstr "念のため、データが入っていることを確認してみましょう。"

# f32c5902673741f7b30561531cef7f9a
#: ../../../source/tutorial/introduction.txt:162
msgid "Get a record"
msgstr "レコードの取得"

# 8cb3ff01469d48e28b6875b2554741e8
#: ../../../source/tutorial/introduction.txt:164
msgid "A :doc:`/commands/select` command can search records in a table."
msgstr ""
":doc:`/commands/select` コマンドを用いて、テーブルの中身を表示することができ"
"ます。"

# e38ea18132744542b958286632ffe6c9
#: ../../../source/tutorial/introduction.txt:166
msgid ""
"If a search condition is specified with a `query` parameter, a :doc:`/"
"commands/select` command searches records matching the search condition and "
"returns the matched records."
msgstr ""
"`query` 引数を使って検索条件が指定された場合、 :doc:`/commands/select` コマン"
"ドは検索条件に適合するレコードを検索し、検索結果を出力します。"

# ec50e00750b2498fb6a1cf945b94ef20
#: ../../../source/tutorial/introduction.txt:168
msgid ""
"Let's get a record having a specified record ID. The following example gets "
"the first record in the Site table. More precisely, the `query` parameter "
"specifies a record whose _id column stores 1."
msgstr ""
"それでは、IDを指定してレコードを取り出してみましょう。以下の例では、Siteテー"
"ブルの先頭レコードを取り出します。正確には、 `query` 引数を使って _id カラム"
"に1が格納されているレコードを要求しています。"

# 8edf85223ba64dc0914d61e5c4f95c61
#: ../../../source/tutorial/introduction.txt:174
msgid ""
"Next, let's get a record having a specified key. The following example gets "
"the record whose primary key is \"http://example.org/\". More precisely, the "
"`query` parameter specifies a record whose _key column stores \"http://"
"example.org/\"."
msgstr ""
"次に、主キーを指定してレコードを取り出してみましょう。以下の例では、主キーが "
"\"http://example.org/\" のキーを取り出します。正確には、 `query` 引数を使っ"
"て _key カラムに \"http://example.org/\" が格納されているレコードを要求してい"
"ます。"

# 86701e6e96324ccba83052699027da21
#: ../../../source/tutorial/introduction.txt:181
msgid "Create a lexicon table for full text search"
msgstr "全文検索用の語彙表の作成"

# 86701e6e96324ccba83052699027da21
#: ../../../source/tutorial/introduction.txt:183
msgid "Let's go on to how to make full text search."
msgstr "そろそろ全文検索の使い方について見ていきましょう。"

#: ../../../source/tutorial/introduction.txt:185
msgid ""
"Groonga uses an inverted index to provide fast full text search. So, the "
"first step is to create a lexicon table which stores an inverted index, also "
"known as postings lists. The primary key of this table is associated with a "
"vocabulary made up of index terms and each record stores postings lists for "
"one index term."
msgstr ""
"groongaでは転置インデックスを使って高速な全文検索を実現しています。そのため、"
"まずは転置インデックスとして用いるテーブルを作成する必要があります。テーブル"
"の内容は、文書に含まれる単語やN-gramなどの索引語を主キーとして、各カラムに索"
"引語の位置情報を格納するという構成になります。結果として、主キーのカラムは全"
"文検索における語彙表の役割を果たします。"

#: ../../../source/tutorial/introduction.txt:187
msgid ""
"The following shows a command which creates a lexicon table named Terms. The "
"data type of its primary key is ShortText."
msgstr ""
"以下の例では、Termsという名前のテーブルを転置インデックスの語彙表として作成し"
"ています。索引語を格納するため、主キーの型はShortTextです。"

#: ../../../source/tutorial/introduction.txt:193
msgid ""
"The :doc:`/commands/table_create` command takes many parameters but you "
"don't need to understand all of them. Please skip the next paragraph if you "
"are not interested in how it works."
msgstr ""
":doc:`/commands/table_create` には多くの引数が指定されているものの、本チュー"
"トリアルではすべてを理解する必要はありません。以下に簡単な説明を述べますが、"
"読み飛ばしてもらってかまいません。"

# 7cded565e72b46869c9d7e759dfcddb6
#: ../../../source/tutorial/introduction.txt:195
msgid ""
"The TABLE_PAT_KEY flag specifies to store index terms in a patricia trie. "
"The KEY_NORMALIZE flag specifies to normalize index terms. In this example, "
"both flags are validated by using a '|'. The `default_tokenizer` parameter "
"specifies the method for tokenizing text. This example uses TokenBigram that "
"is generally called N-gram."
msgstr ""
"TABLE_PAT_KEYフラグは、主キーをパトリシア木に格納することを指示しています。"
"KEY_NORMALIZEフラグは、索引語を正規化して登録することを指示しています。 "
"`default_tokenizer` 引数には、検索対象の文書をトークナイズする方式を指定する"
"ようになっています。上記の例では、一般的にN-gramと呼ばれるインデックス方式に"
"対応するTokenBigramを指定しています。"

# 86701e6e96324ccba83052699027da21
#: ../../../source/tutorial/introduction.txt:198
msgid "Create an index column for full text search"
msgstr "全文検索用のインデックスカラムの作成"

#: ../../../source/tutorial/introduction.txt:200
msgid ""
"The second step is to create an index column, which allows you to search "
"records from its associated column. That is to say this step specifies which "
"column needs an index."
msgstr ""
"次に必要なのは、インデックス型のカラムを作成することです。このカラムは、関連"
"付けられたカラムに対する全文検索に利用されます。つまり、全文検索を行いたいカ"
"ラムに対してインデックスを作成することに相当します。"

#: ../../../source/tutorial/introduction.txt:202
msgid ""
"Let's create an index column. The following example creates an index column "
"for a column in the Site table."
msgstr ""
"それでは、インデックスカラムを作成してみましょう。以下の例では、Siteテーブル"
"のカラムに対するインデックスカラムを作成します。それでは、Siteテーブルのtitle"
"カラムを全文検索の対象とするべく、インデックス型のカラムを作成してみましょ"
"う。"

# 83e0fea2854347a48a4e1330fbd06a7e
#: ../../../source/tutorial/introduction.txt:208
msgid ""
"The `table` parameter specifies the index table and the `name` parameter "
"specifies the index column. The `type` parameter specifies the target table "
"and the `source` parameter specifies the target column. The COLUMN_INDEX "
"flag specifies to create an index column and the WITH_POSITION flag "
"specifies to create a full inverted index, which contains the positions of "
"each index term. This combination, COLUMN_INDEX|WITH_POSITION, is "
"recommended for the general purpose."
msgstr ""
"`table` 引数は語彙表を指定し、 `name` 引数はインデックスカラムを指定します。"
"また、 `type` 引数はインデックスの対象となるテーブルを指定し、 `source` 引数"
"はインデックスの対象となるカラムを指定します。COLUMN_INDEXフラグはインデック"
"スカラムの作成を指示し、WITH_POSITIONフラグは各索引語の位置情報をインデックス"
"に含めることを指示します。一般的な全文検索インデックスを作成したいときは、"
"COLUMN_INDEX|WITH_POSITIONを指定してください。索引語の位置情報については、本"
"チュートリアルでは触れません。"

# e455171020c74b2995c850fbf5c3d707
#: ../../../source/tutorial/introduction.txt:212
msgid ""
"You can create a lexicon table and index columns before/during/after loading "
"records. If a target column already has records, groonga creates an inverted "
"index in a static manner. In contrast, if you load records into an already "
"indexed column, groonga updates the inverted index in a dynamic manner."
msgstr ""
"語彙表とインデックスカラムを作成するタイミングは、データをロードする前後のど"
"ちらでも問題ありません。データをロードした後でインデックスを作成し、さらに新"
"しいデータをロードすることもできます。インデックスの作成を指示したタイミング"
"でレコードが既に存在するときは、静的にインデックスを作成します。一方、イン"
"デックスを作成した後で追加されたレコードについては、動的にインデックスを更新"
"します。"

# 889b663bc7ff431f888baf85574207d5
#: ../../../source/tutorial/introduction.txt:215
msgid "Full text search"
msgstr "全文検索"

#: ../../../source/tutorial/introduction.txt:217
msgid ""
"It's time. You can make full text search with a :doc:`/commands/select` "
"command."
msgstr ""
"インデックスを作成したことにより、 :doc:`/commands/select` コマンドによる全文"
"検索が可能になります。"

#: ../../../source/tutorial/introduction.txt:219
msgid ""
"A query for full text search is specified with a `query` parameter. The "
"following example searches records whose \"title\" column contains \"this\". "
"The '@' specifies to make full text search. Note that a lower case query "
"matches upper case and capitalized terms in a record if KEY_NORMALIZE was "
"specified when creating a lexcon table."
msgstr ""
"全文検索のクエリは `query` 引数により指定することができます。以下の例では、"
"titleカラムに \"this\" という文字列が含まれているレコードを検索します。 "
"`query` 引数に含まれる '@' は、全文検索を指示しています。語彙表の作成におい"
"て KEY_NORMALIZE フラグを指定したときは、全角・半角や大文字・小文字などの違い"
"が吸収されることに注意してください。"

# e22d8716e0ce40f5898bfea63c8260df
#: ../../../source/tutorial/introduction.txt:225
msgid ""
"In this example, the first record matches the query because its title "
"contains \"This\", that is the capitalized form of the query."
msgstr ""
"上記の例では、\"This\" という単語を含む先頭レコードのみが検索条件に適合しま"
"す。"

#: ../../../source/tutorial/introduction.txt:227
msgid ""
"A :doc:`/commands/select` command accepts an optional parameter, named "
"`match_columns`, that specifies the default target columns. This parameter "
"is used if target columns are not specified in a query. [#]_"
msgstr ""
":doc:`/commands/select` コマンドには、 `match_columns` という引数が存在しま"
"す。このパラメータはデフォルトで検索対象にするカラムを指定するもので、カラム"
"名を指定しない検索条件にのみ適用されます。 [1]_"

# fe9bfc13759d46b4a0b76f729a7d6c77
#: ../../../source/tutorial/introduction.txt:229
msgid ""
"The combination of \"`--match_columns` title\" and \"`--query` this\" brings "
"you the same result that \"`--query` title:@this\" does."
msgstr ""
"\"`--match_columns` title\" と \"`--query` this\" の組み合わせを指定すると、 "
"\"`--query` title:@this\" を指定したときと同じ検索条件になります。"

# 12e3b87c0ed64703a7ef66eff3bce8af
#: ../../../source/tutorial/introduction.txt:236
msgid "Specify output columns"
msgstr "出力カラムの指定"

# cada70fbbe534c64a949a3c07a6b0039
#: ../../../source/tutorial/introduction.txt:238
msgid ""
"An `output_columns` parameter of a :doc:`/commands/select` command specifies "
"columns to appear in the search result. If you want to specify more than one "
"columns, please separate column names by commas (',')."
msgstr ""
":doc:`/commands/select` コマンドにおいて `output_columns` 引数を用いること"
"で、検索結果に含めるカラムを指定することができます。複数のカラムを指定すると"
"きは、カンマ（,）区切りでカラムを列挙します。"

#: ../../../source/tutorial/introduction.txt:244
msgid ""
"This example specifies three output columns including the _score column, "
"which stores the relevance score of each record."
msgstr ""
"上記の例では、_scoreカラムを含む3つのカラムを指定しています。_scoreカラムは"
"groongaの検索結果に含まれるカラムであり、全文検索の条件に合致するレコードほど"
"高い数値が入ります。"

# 12e3b87c0ed64703a7ef66eff3bce8af
#: ../../../source/tutorial/introduction.txt:247
msgid "Specify output ranges"
msgstr "表示範囲指定"

#: ../../../source/tutorial/introduction.txt:249
msgid ""
"A :doc:`/commands/select` command returns a part of its search result if "
"`offset` and/or `limit` parameters are specified. These parameters are "
"useful to paginate a search result, a widely-used interface which shows a "
"search result on a page by page basis."
msgstr ""
":doc:`/commands/select` コマンドにおいて `offset` 引数と `limit` 引数を用いる"
"ことで、検索結果の一部のみを表示することができます。大量の検索結果を分割して"
"ページ単位で表示したい場合などに有用です。"

#: ../../../source/tutorial/introduction.txt:251
msgid ""
"An `offset` parameter specifies the starting point and a `limit` parameter "
"specifies the maximum number of records to be returned. If you need the "
"first record in a search result, the offset parameter must be 0 or omitted."
msgstr ""
"`offset` 引数には、検索結果における始点を指定します。検索結果の1件目が必要な"
"場合、 `offset` 引数を省略するか、0を指定するようにしてください。 `limit` 引"
"数には、検索結果の表示件数を指定します。"

# bb510b00d1884eb99fe04922374fd892
#: ../../../source/tutorial/introduction.txt:260
msgid "Sort a search result"
msgstr "検索結果の並べ替え"

# cada70fbbe534c64a949a3c07a6b0039
#: ../../../source/tutorial/introduction.txt:262
msgid ""
"A :doc:`/commands/select` command sorts its result when used with a `sortby` "
"parameter."
msgstr ""
":doc:`/commands/select` コマンドに `sortby` 引数を渡すことにより、検索結果を"
"並べ替えることができます。"

# a5a5613c2bf640fabc845b6b549c6c5c
#: ../../../source/tutorial/introduction.txt:264
msgid ""
"A `sortby` parameter specifies a column as a sorting creteria. A search "
"result is arranged in ascending order of the column values. If you want to "
"sort a search result in reverse order, please add a leading hyphen ('-') to "
"the column name in a parameter."
msgstr ""
"`sortby` 引数には、整列の基準として用いるカラムを指定します。検索結果は指定し"
"たカラムの値が昇順になるように並べ替えられます。 `sortby` 引数の中でカラム名"
"の前にハイフン（-）を付けることにより、降順に並べ替えることもできます。"

#: ../../../source/tutorial/introduction.txt:266
msgid "The following example shows records in the Site table in reverse order."
msgstr "以下の例では、Siteテーブルのレコードを逆順に表示しています。"

#: ../../../source/tutorial/introduction.txt:272
msgid ""
"The next example uses the _score column as the sorting criteria for ranking "
"the search result. The result is sorted in relevance order."
msgstr ""
"次の例では、_scoreカラムを整列の基準とすることにより、検索結果のランキングを"
"おこなっています。検索結果はクエリとの関連性が高い順に並べ替えられます。"

#: ../../../source/tutorial/introduction.txt:278
msgid ""
"If you want to specify more than one columns, please separate column names "
"by commas (','). In such a case, a search result is sorted in order of the "
"values in the first column, and then records having the same values in the "
"first column are sorted in order of the second column values."
msgstr ""
"整列の基準となるカラムを複数指定したいときは、カンマ（,）区切りでカラムを列挙"
"します。複数のカラムを指定したときは、最初のカラムを基準として整列した後、最"
"初のカラムに同じ値が格納されているレコードを次のカラムを基準として整列しま"
"す。"

# 483e363f1f964ab3a2be02e9c2b67b17
#: ../../../source/tutorial/introduction.txt:285
msgid "footnote"
msgstr "脚注"

#: ../../../source/tutorial/introduction.txt:286
msgid ""
"Currently, a `match_columns` parameter is available iff there exists an "
"inverted index for full text search. A `match_columns` parameter for a "
"regular column is not supported."
msgstr ""
"現在のバージョンでは、全文検索インデックスが存在する場合にのみ、 "
"`match_columns` 引数を利用することができます。通常のカラムでの絞り込みには利"
"用できません。"

#: ../../../source/tutorial/lexicon.txt:6
msgid "全文検索の語彙表に対する追加情報"
msgstr ""

#: ../../../source/tutorial/lexicon.txt:8
msgid ""
"groongaでは、全文検索に用いるための語意表がテーブルとして扱えます。よって、語"
"彙ごとに複数の情報を保持することができます。例えば、語彙の出現数や検索ストッ"
"プワードのフラグ、単語の重要度などを保持することができます。"
msgstr ""

#: ../../../source/tutorial/lexicon.txt:10
msgid "この項目については、現在執筆中です。"
msgstr ""

#: ../../../source/tutorial/match_columns.txt:9
msgid "match_columnsパラメータ"
msgstr ""

#: ../../../source/tutorial/match_columns.txt:12
msgid "複数のカラムを対象とした全文検索"
msgstr ""

#: ../../../source/tutorial/match_columns.txt:14
msgid ""
"groongaでは、複数のカラムを対象とした全文検索を行うことができます。例えば、ブ"
"ログのテーブルで、タイトルと内容とがそれぞれ別のカラムに入ったものがあるとし"
"ましょう。「タイトルもしくは内容に特定の単語を含む」検索を行いたいとします。"
msgstr ""

#: ../../../source/tutorial/match_columns.txt:16
msgid ""
"この場合、2つのインデックス作成方式があります。1つは、それぞれのカラムに1つず"
"つインデックスを付与する方式です。もう1つは、複数のカラムに対して1つのイン"
"デックスを付与する方式です。groongaでは、どちらの形式のインデックスが存在して"
"いる場合でも、同一の記法で全文検索を行うことができます。"
msgstr ""

#: ../../../source/tutorial/match_columns.txt:19
msgid "カラムごとにインデックスを付与する場合"
msgstr ""

#: ../../../source/tutorial/match_columns.txt:21
msgid ""
"Blog1テーブルを作り、タイトル文字列のtitleカラム、本文のmessageカラムを追加し"
"ています。 インデックス用のIndexBlog1テーブルも作り、titleカラムのインデック"
"ス用にindex_titleカラム、messageカラムのインデック用にindex_messageカラムと、"
"それぞれ1カラムごとに1つずつ追加しています。"
msgstr ""

# b5b69e0bad9d4b229fd7f08db85d6348
#: ../../../source/tutorial/match_columns.txt:39
msgid ""
"match_columnsオプションで、検索対象のカラムを複数指定することが出来ます。検索"
"する文字列はqueryオプションで指定します。これを使うことで、タイトルと本文を全"
"文検索することができます。"
msgstr ""

#: ../../../source/tutorial/match_columns.txt:41
msgid "実際に検索してみましょう。"
msgstr ""

#: ../../../source/tutorial/match_columns.txt:50
msgid "複数のカラムにまたがったインデックスを付与する場合"
msgstr ""

#: ../../../source/tutorial/match_columns.txt:52
msgid ""
"内容は上の例とほぼ同じですが、titleとmessageの2つのカラムに対するインデックス"
"が共通になっており、インデックスカラムが1つしかありません。"
msgstr ""

#: ../../../source/tutorial/match_columns.txt:54
msgid ""
"共通のインデックスを用いても、titleカラムのみでの検索、messageカラムのみでの"
"検索、titleもしくはmessageカラムでの検索、全ての検索を行うことができます。"
msgstr ""

#: ../../../source/tutorial/match_columns.txt:71
msgid "実際に検索してみましょう。結果は上の例と同じになります。"
msgstr ""

#: ../../../source/tutorial/match_columns.txt:80
msgid "インデックス名を指定した全文検索"
msgstr ""

#: ../../../source/tutorial/match_columns.txt:82
#: ../../../source/tutorial/match_columns.txt:89
msgid "執筆中です。"
msgstr ""

#: ../../../source/tutorial/match_columns.txt:87
msgid "インデックスの重み"
msgstr ""

#: ../../../source/tutorial/micro_blog.txt:9
msgid "マイクロブログ検索システムの作成"
msgstr ""

#: ../../../source/tutorial/micro_blog.txt:11
msgid ""
"これまで学んだgroongaの機能を用いて、マイクロブログの検索システムを作成してみ"
"ましょう。マイクロブログとは、Twitterのような短いメッセージを投稿するブログで"
"す。"
msgstr ""

#: ../../../source/tutorial/micro_blog.txt:14
msgid "テーブルの作成"
msgstr ""

#: ../../../source/tutorial/micro_blog.txt:16
msgid "まずは、テーブルを作成します。"
msgstr ""

#: ../../../source/tutorial/micro_blog.txt:48
msgid "Usersテーブル"
msgstr ""

#: ../../../source/tutorial/micro_blog.txt:50
msgid ""
"ユーザーの名前や自己紹介文、フォローしているユーザー一覧など、ユーザー情報を"
"格納するためのテーブルです。"
msgstr ""

#: ../../../source/tutorial/micro_blog.txt:53
msgid "ユーザーID"
msgstr ""

#: ../../../source/tutorial/micro_blog.txt:56
msgid "ユーザー名"
msgstr ""

#: ../../../source/tutorial/micro_blog.txt:59
msgid "フォローしているユーザーの一覧"
msgstr ""

#: ../../../source/tutorial/micro_blog.txt:62
msgid "お気に入りのコメント一覧"
msgstr ""

#: ../../../source/tutorial/micro_blog.txt:65
msgid "ユーザーの現在地（緯度経度座標）"
msgstr ""

#: ../../../source/tutorial/micro_blog.txt:68
msgid "ユーザーの現在地（文字列）"
msgstr ""

#: ../../../source/tutorial/micro_blog.txt:71
msgid "ユーザーの自己紹介"
msgstr ""

#: ../../../source/tutorial/micro_blog.txt:74
msgid ""
"Usersテーブルのfollowerカラムに対するインデックス。 このインデックスを作るこ"
"とで、あるユーザーをフォローしているユーザーを検索できるようになります。"
msgstr ""

#: ../../../source/tutorial/micro_blog.txt:78
msgid "Commentsテーブル"
msgstr ""

#: ../../../source/tutorial/micro_blog.txt:80
msgid ""
"コメント内容や投稿日時、返信先情報など、コメントに関する内容を格納するテーブ"
"ルです。"
msgstr ""

#: ../../../source/tutorial/micro_blog.txt:83
msgid "コメントID"
msgstr ""

#: ../../../source/tutorial/micro_blog.txt:86
msgid "コメント内容"
msgstr ""

#: ../../../source/tutorial/micro_blog.txt:89
msgid "投稿日時"
msgstr ""

#: ../../../source/tutorial/micro_blog.txt:92
msgid "返信元のコメント内容"
msgstr ""

#: ../../../source/tutorial/micro_blog.txt:95
msgid "返信先のユーザーの一覧"
msgstr ""

#: ../../../source/tutorial/micro_blog.txt:98
msgid "コメントのハッシュタグの一覧"
msgstr ""

#: ../../../source/tutorial/micro_blog.txt:101
msgid "投稿場所(緯度経度座標のため)"
msgstr ""

#: ../../../source/tutorial/micro_blog.txt:104
msgid "コメントを書いたユーザー"
msgstr ""

#: ../../../source/tutorial/micro_blog.txt:107
msgid ""
"Usersテーブルのfavoritesカラムに対するインデックス。 このインデックスを作るこ"
"とで、指定したコメントを誰がお気に入りに入れているのかを検索できるようになり"
"ます。"
msgstr ""

#: ../../../source/tutorial/micro_blog.txt:111
msgid "HashTagsテーブル"
msgstr ""

#: ../../../source/tutorial/micro_blog.txt:113
msgid "コメントのハッシュタグを一覧で保存するためのテーブルです。"
msgstr ""

#: ../../../source/tutorial/micro_blog.txt:116
msgid "ハッシュタグ"
msgstr ""

# 5e188c51bec24646954e58a55b1d5ec5
#: ../../../source/tutorial/micro_blog.txt:119
msgid ""
"「Comments.hash_tags」のインデックス。 このインデックスを作ることで、指定した"
"ハッシュタグのついているコメントの一覧を出すことが出来るようになります。"
msgstr ""

#: ../../../source/tutorial/micro_blog.txt:123
msgid "Bigramテーブル"
msgstr ""

# 8e68bf66b34a470d9be215f2c55ed5d0
#: ../../../source/tutorial/micro_blog.txt:125
msgid ""
"ユーザー情報・コメントで全文検索が出来るようにするためのインデックスを格納す"
"るテーブルです。"
msgstr ""

#: ../../../source/tutorial/micro_blog.txt:128
msgid "単語"
msgstr ""

#: ../../../source/tutorial/micro_blog.txt:131
msgid ""
"ユーザー情報のインデックス。 このカラムは、ユーザー名「Users.name」、現在地"
"「Users.location_str」、自己紹介文「Users.description」のインデックスになって"
"います。"
msgstr ""

#: ../../../source/tutorial/micro_blog.txt:135
msgid "コメント内容「Comments.comment」のインデックス"
msgstr ""

#: ../../../source/tutorial/micro_blog.txt:138
msgid "データのロード"
msgstr ""

#: ../../../source/tutorial/micro_blog.txt:140
msgid "つづいて、テスト用データをロードします。"
msgstr ""

#: ../../../source/tutorial/micro_blog.txt:238
msgid ""
"Usersテーブルのfollowerカラムとfavoritesカラム、そしてCommentsテーブルの"
"replied_usersカラムは、ベクターカラムです。そのため、これらのカラムは配列で値"
"を指定します。"
msgstr ""

#: ../../../source/tutorial/micro_blog.txt:240
msgid ""
"Usersテーブルのlocationカラムと、Commentsテーブルのlocationカラムは、GeoPoint"
"型です。この型での値の指定は、\"[緯度]x[経度]\"と記述して指定します。"
msgstr ""

# 3479bb9a539542f5ac6f4bca3cdabbcf
#: ../../../source/tutorial/micro_blog.txt:242
msgid ""
"Commentsテーブルのlast_modifiedカラムは、Time型です。この型での値を指定する方"
"法は2つあります。 1つ目の方法は、1970年1月1日0時0分0秒からの経過秒数の値を直"
"接指定する方法です。このとき、小数部分を指定することでマイクロ秒数での指定が"
"可能です。指定した値は、データのロードの際にマイクロ秒を単位とする整数値に変"
"換後、格納されます。 2つ目の方法は、文字列で日時と時刻を指定する方法で"
"す。\"年/月/日 時:分:秒\"というフォーマットで記述することで、データロードの際"
"に文字列からキャストされ、マイクロ秒数の値が格納されます。"
msgstr ""

#: ../../../source/tutorial/micro_blog.txt:372
#: ../../../source/tutorial/query_expansion.txt:46
msgid "検索"
msgstr ""

#: ../../../source/tutorial/micro_blog.txt:374
msgid "それでは、実際に検索をしてみましょう。"
msgstr ""

#: ../../../source/tutorial/micro_blog.txt:377
msgid "キーワードでユーザー検索"
msgstr ""

#: ../../../source/tutorial/micro_blog.txt:378
msgid ""
"ここでは、 :doc:`match_columns` で扱った、複数カラムを対象とした検索を行いま"
"す。 指定された文字列で、ユーザー名・現在地・自己紹介文を対象に検索をします。"
msgstr ""

#: ../../../source/tutorial/micro_blog.txt:385
msgid ""
"「東京」をキーワードにユーザー検索した結果、東京都に住んでいる「グニャラく"
"ん」と「OffGao」がヒットしました。"
msgstr ""

#: ../../../source/tutorial/micro_blog.txt:388
msgid "GeoPointでユーザー検索"
msgstr ""

#: ../../../source/tutorial/micro_blog.txt:390
msgid ""
"ここでは、 :doc:`search` で扱った、GeoPoint型のカラムで検索をします。 以下の"
"例では、指定された位置から5000m以内にいるユーザーを検索しています。"
msgstr ""

#: ../../../source/tutorial/micro_blog.txt:397
msgid ""
"新宿駅から5km以内にすんでいるユーザーを検索したところ、「グニャラくん」と"
"「OffGao」がヒットしました。"
msgstr ""

#: ../../../source/tutorial/micro_blog.txt:400
msgid "あるユーザーをフォローしているユーザーの検索"
msgstr ""

#: ../../../source/tutorial/micro_blog.txt:402
msgid ""
"ここでは、 :doc:`index` で扱った、参照関係の逆引きをします。 以下の例では、"
"Usersテーブルのfollowerカラムにあるフォローリストを逆引きします。"
msgstr ""

#: ../../../source/tutorial/micro_blog.txt:409
msgid ""
"「グニャラくん」をフォローしている「hsiomaneki」と「OffGao」がヒットしまし"
"た。"
msgstr ""

#: ../../../source/tutorial/micro_blog.txt:412
msgid "GeoPointでコメント検索"
msgstr ""

#: ../../../source/tutorial/micro_blog.txt:413
msgid ""
"ある範囲内で書かれたコメントを検索します。 また、 :doc:`drilldown` で扱ったド"
"リルダウンも行います。検索結果をハッシュタグとユーザーでドリルダウンし、ユー"
"ザー別・ハッシュタグ別のカウントを出します。"
msgstr ""

#: ../../../source/tutorial/micro_blog.txt:420
msgid ""
"範囲を広く指定したため、位置情報のあるすべてのコメントがヒットしました。そし"
"て、ヒットしたコメントからドリルダウンされた結果も返ってきており、ハッシュタ"
"グは「#groonga」が2つに「#travel」が1つ、投稿者は「グニャラくん」「OffGao」が"
"それぞれ2件ずつであることがわかります。"
msgstr ""

#: ../../../source/tutorial/micro_blog.txt:423
msgid "キーワードでコメント検索"
msgstr ""

#: ../../../source/tutorial/micro_blog.txt:424
msgid ""
"あるキーワードを含むコメントを検索します。 さらに、 :doc:`search` で扱った、"
"スコア値_scoreも出してみましょう。"
msgstr ""

#: ../../../source/tutorial/micro_blog.txt:431
msgid ""
"「なう」をキーワードにコメント検索した結果、2件のコメントがヒットしました。ま"
"た、_scoreの値も返ってきており、「なう」の数が出力されていることが確認できま"
"す。"
msgstr ""

#: ../../../source/tutorial/micro_blog.txt:434
msgid "GeoPointとキーワードでコメント検索"
msgstr ""

#: ../../../source/tutorial/micro_blog.txt:435
msgid ""
"今度は、キーワードとGeoPointの両方を条件に検索をしてみます。--queryと--filter"
"の両方を使用した場合、両方の条件に一致するレコードがヒットします。"
msgstr ""

#: ../../../source/tutorial/micro_blog.txt:441
msgid ""
"両方の条件を満たすコメントが1件ヒットしました。また、ドリルダウンの結果も返っ"
"てきており、「グニャラくん」のコメント1件であることがわかります。"
msgstr ""

#: ../../../source/tutorial/micro_blog.txt:444
msgid "ハッシュタグでコメント検索"
msgstr ""

#: ../../../source/tutorial/micro_blog.txt:445
msgid ""
"あるハッシュタグのついているコメントを検索します。 これも、 :doc:`index` で"
"扱った、参照関係の逆引きを使います。"
msgstr ""

#: ../../../source/tutorial/micro_blog.txt:452
msgid ""
"#groongaタグの付いている2件のコメントがヒットしました。また、投稿者のドリルダ"
"ウンも返ってきており、2件とも「グニャラくん」のものであることがわかります。"
msgstr ""

#: ../../../source/tutorial/micro_blog.txt:455
msgid "ユーザーIDでコメント検索"
msgstr ""

#: ../../../source/tutorial/micro_blog.txt:456
msgid "あるユーザーが投稿したコメントを検索します。"
msgstr ""

#: ../../../source/tutorial/micro_blog.txt:462
msgid ""
"「グニャラくん」が書き込んだ4件のコメントがヒットしました。また、ハッシュタグ"
"でドリルダウンした結果も返ってきており、ハッシュタグは「#groonga」が2つに"
"「#travel」が1つあることがわかります。"
msgstr ""

#: ../../../source/tutorial/micro_blog.txt:465
msgid "ユーザーのお気に入りコメントを検索"
msgstr ""

#: ../../../source/tutorial/micro_blog.txt:466
msgid "あるユーザーがお気に入りに入れているコメントを検索します。"
msgstr ""

#: ../../../source/tutorial/micro_blog.txt:472
msgid "「グニャラくん」がお気に入りに入れている2件のコメントがヒットしました。"
msgstr ""

#: ../../../source/tutorial/micro_blog.txt:475
msgid "投稿時間でコメント検索"
msgstr ""

#: ../../../source/tutorial/micro_blog.txt:476
msgid ""
"コメントの投稿時間で検索をします。Time型については :doc:`data` で扱っていま"
"す。 この例では、指定した時間よりも前に投稿されているコメントを検索します。"
msgstr ""

#: ../../../source/tutorial/micro_blog.txt:483
msgid ""
"2010/03/17 14:00:00以前に書かれたコメント5件がヒットしました。また、ドリルダ"
"ウンの結果も返ってきており、「hsiomaneki」が2件、「グニャラくん」が3件ヒット"
"していることがわかります。"
msgstr ""

# e667839575dd4575a23036acbd75f3fd
#: ../../../source/tutorial/network.txt:11
msgid "Remote access"
msgstr "リモートアクセス"

# aba6954242c14501bd3a285d08a7f9b8
#: ../../../source/tutorial/network.txt:13
msgid ""
"You can use groonga as a server which allows remote access. Groonga supports "
"the original protocol (gqtp), the memcached binary protocol and HTTP."
msgstr ""
"groongaをサーバとして起動することにより、ネットワークを介してデータベースにア"
"クセスできるようになります。groongaがサポートしているプロトコルは、groongaの"
"専用プロトコルであるgqtp、memcachedバイナリプロトコル、HTTPの三種類です。"

# 25314998f8a44c8ca314c0ce7808341f
#: ../../../source/tutorial/network.txt:16
msgid "Groonga query transfer protocol (gqtp)"
msgstr "groonga専用プロトコル（gqtp）"

#: ../../../source/tutorial/network.txt:19
msgid "How to run a gqtp server"
msgstr "gqtpサーバの起動"

# d6b116c322594360b727ea6cbc5da918
#: ../../../source/tutorial/network.txt:21
msgid ""
"Groonga has a special protocol, named groonga query transfer ptorotocl "
"(gqtp), for remote access to a database. The following form shows how to run "
"groonga as a gqtp server."
msgstr ""
"groongaには、専用のプロトコルであるgqtpが存在します。gqtpを用いることにより、"
"データベースへとリモートアクセスすることができます。以下の書式はgqtpサーバの"
"起動方法を示しています。"

# ec85c284500e4549b3ad9b977c5ca2aa
#: ../../../source/tutorial/network.txt:27
msgid ""
"The `-s` option specifies to run groonga as a server. DB_PATH specifies the "
"path of the existing database to be hosted. The `-p` option and its "
"argument, PORT_NUMBER, specify the port number of the server. The default "
"port number is 10041, which is used when you don't specify PORT_NUMBER."
msgstr ""
"`-s` オプションはgroongaをサーバとして起動するためのオプションです。DB_PATHに"
"は既存のデータベースのパスを指定します。 `-p` オプションとその引数により、"
"サーバのポート番号を指定することができます。ポート番号を省略した場合は10041が"
"使用されます。"

# 0bbeedf7a0ce4fb98f0b9af07d086a93
#: ../../../source/tutorial/network.txt:29
msgid ""
"The following command runs a server that listens on the default port number. "
"The server accepts operations to the specified database."
msgstr ""
"以下のコマンドにより、デフォルトのポート番号で待ち受けるサーバを起動すること"
"ができます。サーバは指定されたデータベースへの操作を受け付けます。"

# 5c086abd44eb4e40be44306cf06e1f13
#: ../../../source/tutorial/network.txt:38
msgid "How to run a gqtp daemon"
msgstr "gqtpデーモンの起動"

# aba6954242c14501bd3a285d08a7f9b8
#: ../../../source/tutorial/network.txt:40
msgid ""
"You can also run a gqtp server as a daemon by using the `-d` option, instead "
"of the `-s` option."
msgstr ""
"gqtpサーバはデーモンとして起動することができます。オプションとして、 `-s` の"
"代わりに `-d` を与えてください。"

# 3c5469f173484ec8ba39c2245ed9455a
#: ../../../source/tutorial/network.txt:46
msgid ""
"A groonga daemon prints its process ID as follows. In this example, the "
"process ID is 12345. Then, the daemon opens a specified database and accepts "
"operations to that database."
msgstr ""
"groongaをデーモンとして起動したときは、デーモンのプロセスIDが表示されます。以"
"下の例では、12345というプロセスIDが表示されています。サーバとして起動した場合"
"と同様に、指定されたデータベースへの操作を受け付けます。"

# 5c086abd44eb4e40be44306cf06e1f13
#: ../../../source/tutorial/network.txt:55
msgid "How to run a gqtp client"
msgstr "gqtpサーバへの接続"

# f5ec19849c3d416b9704b474f9716929
#: ../../../source/tutorial/network.txt:57
msgid "You can run groonga as a gqtp client as follows:"
msgstr "gqtpサーバに接続するクライアントは、以下のように起動します。"

# abf4e97bb050457ba3d7c2543db16c19
#: ../../../source/tutorial/network.txt:63
msgid ""
"This command establishes a connection with a gqtp server and then enters "
"into interactive mode. HOST_NAME_OR_IP_ADDRESS specifies the hostname or the "
"IP address of the server. If not specifed, groonga uses the default hostname "
"\"localhost\". The `-p` option and its argument, PORT_NUMBER, specify the "
"port number of the server. If not specified, groonga uses the default port "
"number 10041."
msgstr ""
"上記のコマンドによって起動されたクライアントは、サーバとの接続に成功すると対"
"話モードに入ります。HOST_NAME_OR_IP_ADDRESSにはサーバのホスト名もしくはIPアド"
"レスを指定します。HOST_NAME_OR_IP_ADDRESSが省略されたときは\"localhost\"を"
"サーバのホスト名として採用します。また、 `-p` オプションとその引数により、"
"サーバのポート番号を指定することができます。ポート番号を省略した場合は10041が"
"使用されます。"

#: ../../../source/tutorial/network.txt:72
msgid ""
"In interactive mode, groonga reads commands from the standard input and "
"executes them one by one."
msgstr "対話モードでは、標準入力からコマンドを読み込んで順次実行します。"

# 5c086abd44eb4e40be44306cf06e1f13
#: ../../../source/tutorial/network.txt:75
msgid "How to terminate a gqtp server"
msgstr "gqtpサーバの終了"

#: ../../../source/tutorial/network.txt:77
msgid ""
"You can terminate a gqtp server with a :doc:`/commands/shutdown` command."
msgstr ""
"gqtpサーバを終了する安全は方法は、クライアントを起動して :doc:`/commands/"
"shutdown` を発行することです。"

# ca13b09553e6473d9628d6ad2eed0ce7
#: ../../../source/tutorial/network.txt:86
msgid "Memcached binary protocol"
msgstr "memcachedバイナリプロトコル"

# e4c86c73a6e142828d30f8e04e098155
#: ../../../source/tutorial/network.txt:88
msgid ""
"Groonga supports the memcached binary protocol. The following form shows how "
"to run groonga as a memcached binary protocol server daemon."
msgstr ""
"groongaはmemcachedバイナリプロトコルをサポートしています。以下の書式は"
"memcachedバイナリプロトコルのサーバをデーモンとして起動する方法を示していま"
"す。"

# f75869210a16483384edb6f91c8d3cf2
#: ../../../source/tutorial/network.txt:94
msgid ""
"The `--protocol` option and its argument specify the protocol of the server. "
"\"memcached\" specifies to use the memcached binary protocol."
msgstr ""
"`--protocol` オプションとその引数により、サーバのプロトコルを指定することがで"
"きます。\"memcached\"はmemcachedバイナリプロトコルを示しています。"

# de369068ea8c40d49adf03644d6b6f50
#: ../../../source/tutorial/network.txt:97
msgid "Hypertext transfer protocol (HTTP)"
msgstr "HTTP"

#: ../../../source/tutorial/network.txt:100
msgid "How to run an HTTP server"
msgstr "HTTPサーバの起動"

# 1bd1fe33fb71404ebb390cd5a645e871
#: ../../../source/tutorial/network.txt:102
msgid ""
"Groonga supports the hypertext transfer protocol (HTTP). The following form "
"shows how to run groonga as an HTTP server daemon."
msgstr ""
"groongaはHTTPをサポートしています。以下の書式はHTTPサーバをデーモンとして起動"
"する方法を示しています。"

# 3806418d724e4a11b0042ed5a51046c3
#: ../../../source/tutorial/network.txt:108
msgid ""
"The `--protocol` option and its argument specify the protocol of the server. "
"\"http\" specifies to use HTTP."
msgstr ""
"`--protocol` オプションとその引数により、サーバのプロトコルを指定することがで"
"きます。\"http\"はHTTPサーバの起動を指示しています。"

# 0bbeedf7a0ce4fb98f0b9af07d086a93
#: ../../../source/tutorial/network.txt:110
msgid ""
"The following command runs an HTTP server that listens on the port number 80."
msgstr ""
"以下のコマンドは、ポート番号80で待ち受けるHTTPサーバをデーモンとして起動しま"
"す。"

# 9060642c9ac34a1383aed3289fba31a7
#: ../../../source/tutorial/network.txt:118
msgid "How to send a command to an HTTP server"
msgstr "HTTPサーバへのコマンド送信"

# df79fcf54432414da92f5c02ff7c9e2b
#: ../../../source/tutorial/network.txt:120
msgid ""
"You can send a command to an HTTP server by sending a GET request to /d/"
"COMMAND_NAME. Command parameters can be passed as parameters of the GET "
"request. The format is \"?NAME_1=VALUE_1&NAME_2=VALUE_2&...\"."
msgstr ""
"groongaがHTTPサーバとして起動されているときは、/d/COMMAND_NAME というURLにア"
"クセスすることにより、コマンドを実行することができます。コマンドの引数は、"
"HTTPのGETパラメータとして渡します。引数の書式は \"?"
"NAME_1=VALUE_1&NAME_2=VALUE_2&...\" となります。"

# f8c8c0a35b004171b80f3188d5ba7ee1
#: ../../../source/tutorial/network.txt:122
msgid "The following example shows how to send commands to an HTTP server."
msgstr "以下の例は、HTTPサーバに対するコマンドの送り方を示しています。"

#: ../../../source/tutorial/network.txt:135
msgid "Administration tool (HTTP)"
msgstr "ブラウザベースの管理ツール"

# f27356d1aceb4888a30743f0dd1c0b44
#: ../../../source/tutorial/network.txt:137
msgid ""
"An HTTP server of groonga provides a browser based administration tool that "
"makes database management easy. After starting an HTTP server, you can use "
"the administration tool by accessing http://HOST_NAME_OR_IP_ADDRESS[:"
"PORT_NUMBER]/. Note that Javascript must be enabled for the tool to work "
"properly."
msgstr ""
"groongaをHTTPサーバとして起動しているときは、ブラウザベースの管理ツールを使う"
"ことにより、データベースを簡単に管理することができます。管理ツールを使いたい"
"ときは、ブラウザを使って http://HOST_NAME_OR_IP_ADDRESS[:PORT_NUMBER]/ へとア"
"クセスしてください。管理ツールの使用には、JavaScriptの実行が有効になっている"
"必要があります。"

#: ../../../source/tutorial/network.txt:140
msgid "Security issues"
msgstr "セキュリティ"

#: ../../../source/tutorial/network.txt:142
msgid ""
"Groonga servers don't support user authentication. Everyone can view and "
"modify databases hosted by groonga servers. You are recommended to restrict "
"IP addresses that can access groonga servers. You can use iptables or "
"similar for this purpose."
msgstr ""
"groongaのサーバには認証機能がありません。誰でもデータベースの内容を閲覧・修正"
"することができます。iptablesなどを用いてアクセス元IPアドレスを制限することを"
"推奨します。"

#: ../../../source/tutorial/patricia_trie.txt:9
msgid "パトリシア木による前方一致検索"
msgstr ""

#: ../../../source/tutorial/patricia_trie.txt:11
msgid ""
"groongaのテーブルは、テーブル作成時にパトリシア木オプションを指定すると、前方"
"一致検索を行うことができます。また、追加のオプションを指定することにより、主"
"キーの後方一致検索をも行うことができます。"
msgstr ""

#: ../../../source/tutorial/patricia_trie.txt:14
msgid "主キーによる前方一致検索"
msgstr ""

#: ../../../source/tutorial/patricia_trie.txt:16
msgid ""
"table_createコマンドのflagsオプションにTABLE_PAT_KEYを指定することで、主キー"
"による前方一致検索ができるようになります。"
msgstr ""

#: ../../../source/tutorial/patricia_trie.txt:32
msgid "主キーによる後方一致検索"
msgstr ""

#: ../../../source/tutorial/patricia_trie.txt:34
msgid ""
"table_createコマンドのflagsオプションにTABLE_PAT_KEYとKEY_WITH_SISを指定する"
"ことで、主キーによる前方一致検索・後方一致検索の両方が可能となります。"
msgstr ""

#: ../../../source/tutorial/patricia_trie.txt:36
msgid ""
"KEY_WITH_SISフラグを付与すると、データを追加する際に後方一致用のレコードも追"
"加されてしまいます。そのため、単純に検索すると、元のレコードに加えて自動的に"
"追加されたレコードまでヒットしてしまいます。元のレコードのみ検索するために、"
"一工夫必要になります。"
msgstr ""

# 1aa5ca8a98084b5fab88050d01dea5da
#: ../../../source/tutorial/patricia_trie.txt:38
msgid ""
"例えば、元のレコードと自動的に追加されたレコードとの区別をつけるために、元の"
"レコードであることを示すoriginalカラムを追加して、検索時にはoriginalカラムが "
"``true`` も検索条件に加えます。 ``--query`` オプションでは ``Bool`` 型の値を"
"直感的に指定することができないので ``--filter`` オプションを使っていることに"
"注意してください。"
msgstr ""

#: ../../../source/tutorial/query_expansion.txt:9
msgid "クエリ拡張"
msgstr ""

#: ../../../source/tutorial/query_expansion.txt:11
msgid ""
"groongaでは、 :doc:`/commands/select` コマンドにquery_expansionパラメータを指"
"定することによって、ユーザが指定した検索文字列を適宜拡張することが可能です。"
msgstr ""

#: ../../../source/tutorial/query_expansion.txt:13
msgid ""
"たとえば、ユーザが'シークヮーサー'という文字列で検索した場合に、'シークヮー"
"サー OR シークァーサー'で検索した場合と同一の結果を返すことによって、本来ユー"
"ザが必要とする結果をよりもれなく検索できるようになります。"
msgstr ""

#: ../../../source/tutorial/query_expansion.txt:16
msgid "準備"
msgstr ""

#: ../../../source/tutorial/query_expansion.txt:18
msgid ""
"クエリ拡張機能を使用するためには、検索対象となる文書を格納するテーブル(ここで"
"は文書テーブルと呼びます)以外に、ユーザの指定した検索文字列を置換するための"
"テーブル(ここでは置換テーブルと呼びます)を準備します。置換テーブルでは、その"
"主キーが置換前の文字列となり、文字列型(ShortText)のカラムの値が置換後の文字列"
"となります。"
msgstr ""

#: ../../../source/tutorial/query_expansion.txt:20
msgid ""
"TODO: 文字列型のベクターカラムでも可能であり、その場合は各要素をORでつなげた"
"ものに置換されるということを記述する。"
msgstr ""

#: ../../../source/tutorial/query_expansion.txt:22
msgid "実際に文書テーブルと置換テーブルを作成してみましょう。"
msgstr ""

#: ../../../source/tutorial/query_expansion.txt:43
msgid ""
"この例では、ユーザが\"シークァーサー\"と入力しても、\"シークヮーサー\"と入力"
"しても、それぞれの異なる表記の文書をもれなく検索するための置換テーブルを作成"
"しています。"
msgstr ""

#: ../../../source/tutorial/query_expansion.txt:48
msgid ""
"それでは実際に、準備した置換テーブルを使ってみましょう。まずは、"
"query_expansionパラメータを指定せずにselectコマンドを使って検索してみます。"
msgstr ""

#: ../../../source/tutorial/query_expansion.txt:55
msgid ""
"指定された文字列に完全に一致するレコードのみがそれぞれヒットします。次に、"
"query_expansionパラメータに、準備したSynonymテーブルのbodyカラムを指定してみ"
"ましょう。"
msgstr ""

#: ../../../source/tutorial/query_expansion.txt:62
msgid ""
"どちらのクエリ文字列も、\"(シークァーサー OR シークヮーサー)\"という文字列に"
"置換されてから検索されるため、表記の揺れを吸収して検索できるようになりまし"
"た。"
msgstr ""

#: ../../../source/tutorial/search.txt:11
msgid "さまざまな検索条件の指定"
msgstr ""

#: ../../../source/tutorial/search.txt:13
msgid ""
"groongaは、JavaScriptに似た文法での条件絞込や、計算した値を用いたソートを行う"
"ことができます。また、位置情報(緯度・経度)を用いた絞込・ソートを行うことがで"
"きます。"
msgstr ""

#: ../../../source/tutorial/search.txt:16
msgid "JavaScriptに似た文法での絞込・全文検索"
msgstr ""

#: ../../../source/tutorial/search.txt:18
msgid ""
"selectコマンドのfilterパラメータは、queryパラメータと同様に、レコードの検索条"
"件を指定します。filterパラメータとqueryパラメータが異なる点は、filterパラメー"
"タには、JavaScriptの式に似た文法で条件を指定する点です。"
msgstr ""

#: ../../../source/tutorial/search.txt:24
msgid "ここで、filterパラメータには"
msgstr ""

#: ../../../source/tutorial/search.txt:26
msgid "_id <= 1"
msgstr ""

#: ../../../source/tutorial/search.txt:28
msgid ""
"という条件を指定しています。この場合は_idの値が1以下のレコードが検索結果とし"
"て得られます。"
msgstr ""

#: ../../../source/tutorial/search.txt:30
msgid "また、&& や || を使って、条件のAND・OR指定をすることもできます。"
msgstr ""

#: ../../../source/tutorial/search.txt:37
msgid ""
"queryパラメータとfilterパラメータを同時に指定すると、両者の条件をともに満たす"
"レコードが結果として返ります。"
msgstr ""

#: ../../../source/tutorial/search.txt:40
msgid "scorerを利用したソート"
msgstr ""

#: ../../../source/tutorial/search.txt:42
msgid ""
"selectコマンドのscorerパラメータは、 全文検索を行った結果の各レコードに対して"
"処理を行うためのパラメータです。"
msgstr ""

#: ../../../source/tutorial/search.txt:45
msgid ""
"filterパラメータと同様に、 JavaScriptの式に似たな文法で様々な条件を指定するこ"
"とができます。"
msgstr ""

#: ../../../source/tutorial/search.txt:53
msgid ""
"検索結果には、'_score'という名前の、全文検索のスコアが代入されている仮想的な"
"カラムが付与されることをチュートリアル中ソートの項目で説明しました。"
msgstr ""

#: ../../../source/tutorial/search.txt:55
msgid "上記の実行例では、scorerパラメータに"
msgstr ""

#: ../../../source/tutorial/search.txt:57
msgid "_score = rand()"
msgstr ""

#: ../../../source/tutorial/search.txt:59
msgid ""
"という条件を指定しています。ここでは、rand()という乱数を返す関数を用いて、全"
"文検索のスコアを乱数で上書きしています。"
msgstr ""

#: ../../../source/tutorial/search.txt:61
msgid "sortbyパラメータには、"
msgstr ""

#: ../../../source/tutorial/search.txt:63
msgid "_score"
msgstr ""

#: ../../../source/tutorial/search.txt:65
msgid ""
"を指定しています。これは、スコア順に昇順にソートすることを意味しています。"
msgstr ""

#: ../../../source/tutorial/search.txt:67
msgid ""
"よって、上記のクエリは実行されるたびに検索結果の並び順がランダムに変わりま"
"す。"
msgstr ""

#: ../../../source/tutorial/search.txt:70
msgid "位置情報を用いた絞込・ソート"
msgstr ""

#: ../../../source/tutorial/search.txt:72
msgid ""
"groongaでは、位置情報（経緯度）を保存することができます。また、保存した経緯度"
"を用いて絞込やソートができます。"
msgstr ""

#: ../../../source/tutorial/search.txt:74
msgid ""
"位置情報を保存するためのカラムの型として、TokyoGeoPoint/WGS84GeoPointの２つの"
"型があります。前者は日本測地系、後者は世界測地系(WGS84相当)の経緯度を保存しま"
"す。"
msgstr ""

#: ../../../source/tutorial/search.txt:76
msgid "経緯度は以下のいずれかの形式の文字列として指定します。"
msgstr ""

#: ../../../source/tutorial/search.txt:78
msgid "\"[緯度のミリ秒]x[経度のミリ秒]\"（例: \"128452975x503157902\"）"
msgstr ""

#: ../../../source/tutorial/search.txt:79
msgid "\"[緯度のミリ秒],[経度のミリ秒]\"（例: \"128452975,503157902\"）"
msgstr ""

#: ../../../source/tutorial/search.txt:80
msgid ""
"\"[緯度の小数表記の度数]x[経度の小数表記の度数]\"（例: "
"\"35.6813819x139.7660839\"）"
msgstr ""

#: ../../../source/tutorial/search.txt:81
msgid ""
"\"[緯度の小数表記の度数],[経度の小数表記の度数]\"（例: "
"\"35.6813819,139.7660839\"）"
msgstr ""

#: ../../../source/tutorial/search.txt:83
msgid ""
"ここでは、ためしに東京駅と新宿駅とついて、世界測地系での位置情報を保存してみ"
"ましょう。東京駅は緯度が35度40分52.975秒、経度が139度45分57.902秒です。新宿駅"
"は緯度が35度41分27.316秒、経度が139度42分0.929秒です。よって、ミリ秒表記の場"
"合はそれぞれ\"128452975x503157902\"/\"128487316x502920929\"となります。度数表"
"記の場合はそれぞれ\"35.6813819x139.7660839\"/\"35.6909211x139.7002581\"となり"
"ます。ここではミリ秒表記で登録しましょう。"
msgstr ""

#: ../../../source/tutorial/search.txt:95
msgid ""
"scorerパラメータにおいて、 :doc:`/functions/geo_distance` 関数を用いることに"
"より、２点間の距離を計算することができます。"
msgstr ""

#: ../../../source/tutorial/search.txt:97
msgid ""
"ここでは、秋葉原駅からの距離を表示させてみましょう。世界測地系では、秋葉原駅"
"の位置は緯度が35度41分55.259秒、経度が139度46分27.188秒です。よって、"
"geo_distance関数に与える文字列は\"128515259x503187188\"となります。"
msgstr ""

#: ../../../source/tutorial/search.txt:103
msgid ""
"この結果を見ると、東京駅と秋葉原駅は2054m、秋葉原駅と新宿駅は6720m離れている"
"ようです。"
msgstr ""

#: ../../../source/tutorial/search.txt:105
msgid "geo_distance関数は、_scoreを通じてソートでも用いることができます。"
msgstr ""

#: ../../../source/tutorial/search.txt:111
msgid "「ある地点から何m以内に存在する」といった絞込も可能です。"
msgstr ""

#: ../../../source/tutorial/search.txt:113
msgid ""
"filterパラメータにおいて、 :doc:`/functions/geo_in_circle` 関数を用いることに"
"より、２点間の距離が指定のm以下におさまるかどうかを判定することができます。"
msgstr ""

#: ../../../source/tutorial/search.txt:115
msgid "たとえば、秋葉原駅から5000m以内にあるレコードを検索してみましょう。"
msgstr ""

#: ../../../source/tutorial/search.txt:121
msgid ""
"また、経緯度が指定の矩形領域内であるかどうかを判定する :doc:`../functions/"
"geo_in_rectangle` 関数も存在します。"
msgstr ""
